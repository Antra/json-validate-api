{
  "definitions": {
    "AccountingDocumentResponse": {
      "required": [
        "accountingDocuments"
      ],
      "type": "object",
      "properties": {
        "accountingDocuments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingDocumentEntity"
          }
        }
      }
    },
    "AccountingDocumentEntity": {
      "required": [
        "invoiceId",
        "processingStatus",
        "companyCode",
        "supplierCode",
        "currencyCode",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "invoiceId": {
          "description": "Unique identifier for an invoice generated by Basware P2P. Must be returned in when sending acknowledgement, transferResponse or paymentResponse to the invoice.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "bumid": {
          "description": "Unique identifier for a business document generated by BT, used between Basware P2P and other Basware systems.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "invoiceNumber": {
          "description": "Invoice number (from supplier).",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "voucherNumber1": {
          "description": "Voucher Number 1 (for accounting). Voucher numbers can be generated by Basware or returned from customer ERP.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherNumber2": {
          "description": "Voucher Number 2 (for accounting). Voucher numbers can be generated by Basware or returned from customer ERP.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherDate": {
          "format": "date-time",
          "description": "Voucher date can be used to determine the target accounting period for invoice in receiving (ERP) system.",
          "type": "string"
        },
        "processingStatus": {
          "description": "Processing status of the invoice in Basware API.",
          "enum": [
            "WaitingForPrebook",
            "PrebookInProgress",
            "Prebooked",
            "PrebookFailed",
            "WaitingForTransfer",
            "TransferInProgress",
            "Transferred",
            "TransferFailed",
            "WaitingForPrebookCancelation",
            "PrebookCancelationInProgress",
            "PrebookCanceled",
            "PrebookCancelFailed",
            "WaitingToBeRemoved",
            "RemoveInProgress",
            "Removed",
            "RemoveFailed",
            "WaitingToBeReturned",
            "ReturnInProgress",
            "Returned",
            "ReturnFailed",
            "WaitingToBeCompleted",
            "CompletionInProgress",
            "Completed",
            "CompletionFailed",
            "Paid"
          ],
          "type": "string"
        },
        "companyCode": {
          "description": "Company code.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "companyName": {
          "description": "Company name.",
          "maxLength": 250,
          "minLength": 2,
          "type": "string"
        },
        "organizationCode": {
          "description": "Organization element in the higher level of the organization than companyCode. This organization element collects the spend from the lower organization units.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "organizationName": {
          "description": "Organization element name.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "supplierCode": {
          "description": "A party that supplied goods or services referred in the invoice.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "supplierName": {
          "description": "Supplier name.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "currencyCode": {
          "description": "Invoice currency.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "netSum": {
          "format": "double",
          "description": "Invoice net sum (invoice total without tax), in invoice currecy.",
          "type": "number"
        },
        "grossSum": {
          "format": "double",
          "description": "Invoice net sum (invoice total with tax), in invoice currecy.",
          "type": "number"
        },
        "taxCode": {
          "description": "Tax code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent1": {
          "format": "double",
          "description": "Tax percentage.",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "taxPercent2": {
          "format": "double",
          "description": "Second tax percentage (for example for partially deductible VAT).",
          "type": "number"
        },
        "taxSum1": {
          "format": "double",
          "description": "Invoice tax sum to be paid, in invoice currecy.",
          "type": "number"
        },
        "taxSum2": {
          "format": "double",
          "description": "Invoice tax sum that is excluded from the tax sum to be paid, in invoice currency.",
          "type": "number"
        },
        "invoiceDate": {
          "format": "date-time",
          "description": "Invoice date (from supplier).",
          "type": "string"
        },
        "baseLineDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "description": "Due date. The last payment date before penalties.",
          "type": "string"
        },
        "cashDate": {
          "format": "date-time",
          "description": "Cash cate. The last payment date with discount.",
          "type": "string"
        },
        "cashPercent": {
          "format": "double",
          "description": "Percentage out of invoice total that can be excluded if the invoice is paid before the cashDate.",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "cashSum": {
          "format": "double",
          "description": "Total with tax to be paid before cashDate",
          "type": "number"
        },
        "referencePerson": {
          "description": "Person that has been referenced in the invoice.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "contractNumber": {
          "description": "Contract number.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "description": {
          "description": "A short description of an invoice.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "invoiceTypeCode": {
          "description": "Invoice type code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "invoiceTypeName": {
          "description": "Invoice type name.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "paymentMethod": {
          "description": "Payment method.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentBlock": {
          "description": "Identifies if the payment of this invoice should be denied by the ERP system and additonal steps like approval must take place before the invoice can be paid. Normally this parameter has value False when Basware P2P sends invoice for transfer.",
          "type": "boolean"
        },
        "paymentTermCode": {
          "description": "Payment term code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentTermName": {
          "description": "Payment term name.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "paymentTermExternalCode": {
          "description": "Payment term external code.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "paymentPlanReference": {
          "description": "Payment plan reference.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "paymentRevelsalDocument": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "codingDate": {
          "format": "date-time",
          "type": "string"
        },
        "prebooked": {
          "description": "Identifies if the cost is already prebooked in ERP system. Some systems require prebooking the cost before invoice can be sent for payment.",
          "type": "boolean"
        },
        "referenceNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankIBAN": {
          "description": "Supplier bank account (IBAN).",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankBBAN": {
          "description": "Supplier bank account.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankBIC": {
          "description": "Supplier bank SWIFT/BIC code.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankName": {
          "description": "Supplier bank name.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "accountingPeriod": {
          "description": "Code for target accounting period (if specified by Basware P2P).",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accountingGroup": {
          "description": "Name for target accounting period (if specified by Basware P2P).",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "text1": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text6": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text7": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text8": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text9": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text10": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text11": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text12": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text13": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text14": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text15": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text16": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text17": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text18": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text19": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text20": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text21": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text22": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text23": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text24": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text25": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text26": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text27": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text28": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text29": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text30": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric2": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric3": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric4": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric5": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric6": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric7": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric8": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric9": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric10": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric11": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric12": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric13": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric14": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric15": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric16": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric17": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric18": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric19": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric20": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "date1": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date6": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date7": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date8": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date9": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date10": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "invoiceImageURL": {
          "description": "URL Link to invoice image.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "invoiceImageToken": {
          "description": "Invoice image token (invoice-specific part of image link).",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderNumbers": {
          "description": "A list of order numbers associated with invoice",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "Stamp time when transfer message was updated from Basware P2P or transfer message was updated from customer end.",
          "type": "string"
        },
        "codingRows": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardCodingEntity"
          }
        },
        "transferParameters": {
          "description": "A list of transfer parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferParameterEntity"
          }
        },
        "transferResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferResponseEntity"
          }
        },
        "removeResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoveResponseEntity"
          }
        },
        "prebookResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebookResponseEntity"
          }
        },
        "paymentResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentResponseEntity"
          }
        },
        "cashSumCompany": {
          "format": "double",
          "description": "Invoice cash sum, in company home currency.",
          "type": "number"
        },
        "cashSumOrganization": {
          "format": "double",
          "description": "Invoice cash sum, in organization home currency.",
          "type": "number"
        },
        "exchangeRateBaseDate": {
          "format": "date-time",
          "description": "Exchange rate(s) valid on this date are used on the invoice.",
          "type": "string"
        },
        "exchangeRateCompany": {
          "format": "double",
          "description": "Exchange rate between invoice currency and company home currency.",
          "type": "number"
        },
        "exchangeRateOrganization": {
          "format": "double",
          "description": "Exchange rate between invoice currency and organization home currency",
          "type": "number"
        },
        "taxSum1Company": {
          "format": "double",
          "description": "Invoice tax sum 1, in company home currency.",
          "type": "number"
        },
        "taxSum1Organization": {
          "format": "double",
          "description": "Invoice tax sum 1, in organization home currency.",
          "type": "number"
        },
        "taxSum2Company": {
          "format": "double",
          "description": "Invoice tax sum 2, in company home currency.",
          "type": "number"
        },
        "taxSum2Organization": {
          "format": "double",
          "description": "Invoice tax sum 2, in organization home currency.",
          "type": "number"
        },
        "currencyCodeCompany": {
          "description": "Currency code of company home currency.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "currencyCodeOrganization": {
          "description": "Currency code of organization home currency.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "organizationElementCode": {
          "description": "Organization element code.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "organizationElementName": {
          "description": "Organization element name.",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "grossSumCompany": {
          "format": "double",
          "description": "Invoice gross sum (invoice total with tax), in company home currency.",
          "type": "number"
        },
        "grossSumOrganization": {
          "format": "double",
          "description": "Invoice gross sum (invoice total with tax), in organization home currency.",
          "type": "number"
        },
        "netSumCompany": {
          "format": "double",
          "description": "Invoice net sum (invoice total without tax), in company home currency.",
          "type": "number"
        },
        "netSumOrganization": {
          "format": "double",
          "description": "Invoice net sum (invoice total without tax), in organization home currency.",
          "type": "number"
        }
      }
    },
    "StandardCodingEntity": {
      "required": [
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "rowIndex": {
          "format": "int32",
          "description": "Unique number assigned to a row at the time of it's creation",
          "maximum": 100000.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "accountCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accountName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "costCenterCode": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "costCenterName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "deliveryNoteNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "lastComment": {
          "description": "Last user comment related to a coding row",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "matchingType": {
          "format": "int32",
          "description": "Order matching type(framework, return, service, standard)",
          "type": "integer"
        },
        "grossTotal": {
          "format": "double",
          "description": "Coding row gross sum, in invoice currency.",
          "type": "number"
        },
        "grossTotalCompany": {
          "format": "double",
          "description": "Coding row gross sum, in company home currency.",
          "type": "number"
        },
        "grossTotalOrganization": {
          "format": "double",
          "description": "Coding row gross sum, in organization currency.",
          "type": "number"
        },
        "netTotal": {
          "format": "double",
          "description": "Coding row net sum, in invoice currency.",
          "type": "number"
        },
        "netTotalCompany": {
          "format": "double",
          "description": "Coding row net sum, in company home currency.",
          "type": "number"
        },
        "netTotalOrganization": {
          "format": "double",
          "description": "Coding row net sum, in organization currency.",
          "type": "number"
        },
        "orderLineNetTotal": {
          "format": "double",
          "type": "number"
        },
        "orderLineGrossTotal": {
          "format": "double",
          "type": "number"
        },
        "receivedQuantity": {
          "format": "double",
          "type": "number"
        },
        "receivedNetPrice": {
          "format": "double",
          "type": "number"
        },
        "receivedGrossPrice": {
          "format": "double",
          "type": "number"
        },
        "receivedNetTotal": {
          "format": "double",
          "type": "number"
        },
        "receivedGrossTotal": {
          "format": "double",
          "type": "number"
        },
        "organizationElementName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "organizationElementCode": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "freightSlip": {
          "type": "string"
        },
        "conversionNumerator": {
          "format": "double",
          "type": "number"
        },
        "conversionDeNumerator": {
          "format": "double",
          "type": "number"
        },
        "conversionDenominator": {
          "format": "double",
          "type": "number"
        },
        "orderedQuantity": {
          "format": "double",
          "type": "number"
        },
        "orderNetTotal": {
          "format": "double",
          "type": "number"
        },
        "orderGrossTotal": {
          "format": "double",
          "type": "number"
        },
        "orderedNetPrice": {
          "format": "double",
          "type": "number"
        },
        "orderedGrossPrice": {
          "format": "double",
          "type": "number"
        },
        "internalOrderCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "internalOrderName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "orderItemNumber": {
          "type": "string"
        },
        "orderNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "orderLineNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "allocatedQuantity": {
          "format": "double",
          "type": "number"
        },
        "matchedQuantity": {
          "format": "double",
          "type": "number"
        },
        "matchedNetSum": {
          "format": "double",
          "type": "number"
        },
        "matchedGrossSum": {
          "format": "double",
          "type": "number"
        },
        "closeOrder": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "plant": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "profitCenterCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "profitCenterName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessUnitCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessUnitName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "projectCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "projectName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "projectSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "projectSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employeeCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employeeName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "vehicleNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "vehicleName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "customerCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "customerName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "conditionType": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "productCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "productName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "buyerName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderLineDescription": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderLinePriceUnit": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderLinePriceUnitDescription": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "partnerProfitCenter": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetCode": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptItemNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "materialGroup": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "fiscalYear": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "orderLineUOM": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "subUOM": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "commitmentItem": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "controllingArea": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "functionalArea": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "network": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "networkActivity": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "orderCodingRowNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ownerName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxJurisdictionCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent": {
          "format": "double",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "taxPercent2": {
          "format": "double",
          "type": "number"
        },
        "taxSum": {
          "format": "double",
          "description": "Coding row tax sum, in invoice currency.",
          "type": "number"
        },
        "taxSumCompany": {
          "format": "double",
          "description": "Coding row tax sum, in company home currency.",
          "type": "number"
        },
        "taxSumOrganization": {
          "format": "double",
          "description": "Coding row tax sum, in organization currency.",
          "type": "number"
        },
        "taxSum2": {
          "format": "double",
          "description": "Coding row tax sum 2, in invoice currency.",
          "type": "number"
        },
        "taxSum2Company": {
          "format": "double",
          "description": "Coding row tax sum 2, in company home currency.",
          "type": "number"
        },
        "taxSum2Organization": {
          "format": "double",
          "description": "Coding row tax sum 2, in organization currency.",
          "type": "number"
        },
        "rowOrigin": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "plannedAdditionalCostType": {
          "format": "int32",
          "description": "Indicates additional cost line",
          "type": "integer"
        },
        "dimCode1": {
          "description": "dimCode1-10 is used for additional, customer-specific, coding dimensions. Specifies the dimension code.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode2": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode3": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode4": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode5": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode6": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode7": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode8": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode9": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode10": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName1": {
          "description": "dimName1-10 is used for additional, customer-specific, coding dimensions. Specifies the dimension name.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName2": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName3": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName4": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName5": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName6": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName7": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName8": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName9": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName10": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "num1": {
          "format": "double",
          "type": "number"
        },
        "num2": {
          "format": "double",
          "type": "number"
        },
        "num3": {
          "format": "double",
          "type": "number"
        },
        "num4": {
          "format": "double",
          "type": "number"
        },
        "num5": {
          "format": "double",
          "type": "number"
        },
        "text1": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "date1": {
          "format": "date-time",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TransferParameterEntity": {
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "TransferResponseEntity": {
      "required": [
        "externalCode",
        "success",
        "responseMessage",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 2,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "success": {
          "description": "Identifies if the invoice was succesfulle transfered to ERP system",
          "type": "boolean",
          "example": "true"
        },
        "responseMessage": {
          "description": "Message that gives more details of the deviance that was identified in the invoice details. The message is stored to a comment field in the invoice action log item that is created based on the result.",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning transfer response.",
          "maxLength": 32,
          "minLength": 0,
          "type": "string",
          "example": "ERP"
        },
        "voucherNumber1": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "114785224"
        },
        "voucherNumber2": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "774785220"
        },
        "transferDate": {
          "format": "date-time",
          "type": "string"
        },
        "paymentBlock": {
          "type": "boolean"
        }
      }
    },
    "RemoveResponseEntity": {
      "required": [
        "externalCode",
        "responseMessage"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 2,
          "type": "string"
        },
        "success": {
          "description": "Identifies if the invoice was succesfully removed",
          "type": "boolean"
        },
        "responseMessage": {
          "description": "Message that gives more details of the deviance that was identified in the invoice details. The message is stored to a comment field in the invoice action log item that is created based on the result.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning transfer response.",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PrebookResponseEntity": {
      "required": [
        "externalCode",
        "sourceSystem",
        "prebookDate",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 2,
          "type": "string"
        },
        "responseMessage": {
          "description": "Free text message that is written to invoice history",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning prebook response.",
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "voucherNum1": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherNum2": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "prebookDate": {
          "format": "date-time",
          "type": "string"
        },
        "paymentBlock": {
          "type": "boolean"
        }
      }
    },
    "PaymentResponseEntity": {
      "required": [
        "externalCode",
        "sourceSystem",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Unique identifier of the payment response message",
          "maxLength": 36,
          "minLength": 2,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "success": {
          "description": "Indicates that payment was successfully delivered to ERP. Basware P2P is not reacting if the success=False.",
          "type": "boolean",
          "example": true
        },
        "responseMessage": {
          "description": "This message is stored to P2P invoice action log.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning payment response.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string",
          "example": "ERP"
        },
        "paymentDate": {
          "format": "date-time",
          "description": "Date when the invoice was paid can be updated here.",
          "type": "string"
        },
        "paymentTermCode": {
          "description": "Invoice payment term code can be updated here.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "NT30"
        },
        "paymentBlock": {
          "description": "Payment block.",
          "type": "boolean",
          "example": false
        },
        "paymentMethod": {
          "description": "Payment method can be updated here.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "CASH"
        },
        "paidTotal": {
          "format": "double",
          "description": "Paid amount can be updated here.",
          "type": "number"
        },
        "cashDiscount": {
          "format": "double",
          "description": "Cash discount can be updated here.",
          "type": "number"
        },
        "checkNumber": {
          "description": "Unique identifier from the check used in payment transaction.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "123456012"
        },
        "paymentMessage": {
          "description": "Payment message can be updated here.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "PAID"
        },
        "paymentNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "122447-55257552"
        },
        "paymentDocument": {
          "description": "Payment document number can be updated here.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "InvoiceID"
        },
        "paymentReversalDocument": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "v4354fkdX3445H5143"
        }
      }
    },
    "ResponseEntityList": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "hasErrors": {
          "type": "boolean"
        },
        "errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        }
      }
    },
    "ErrorEntity": {
      "type": "object",
      "properties": {
        "externalCode": {
          "type": "string"
        },
        "type": {
          "enum": [
            "BUSINESS",
            "VALIDATION",
            "TECHNICAL",
            "SECURITY"
          ],
          "type": "string"
        },
        "code": {
          "enum": [
            "EXTERNAL_CODE_MISMATCH",
            "SCHEMA_VALIDATION_ERROR",
            "CONFLICT_IN_POST",
            "DATA_ORIGIN_VALIDATION_ERROR",
            "ACCESS_TOKEN_VALIDATION_ERROR",
            "CREDENTIAL_VALIDATION_ERROR",
            "PARAMETER_VALIDATION_ERROR",
            "UNEXPECTED_ERROR",
            "METHOD_NOT_ALLOWED",
            "ENTITY_NOT_FOUND",
            "DATA_VALIDATION_FAILED",
            "SNS_PUBLISH_ERROR"
          ],
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "info": {
          "type": "string"
        }
      }
    },
    "AccountResponse": {
      "required": [
        "accounts"
      ],
      "type": "object",
      "properties": {
        "accounts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountEntity"
          }
        }
      }
    },
    "AccountEntity": {
      "required": [
        "accountCode",
        "accountNames",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Defines a code for the account (used for invoice coding).",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "10012"
        },
        "accountNames": {
          "description": "Defines name(s) for the account (used for invoice coding). Please always include 'en-US' language tag for Basware global support, as well as any local-language tag being used. If both translations are not available, please use the same string with both language tags.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "parents": {
          "description": "Purchase Manager parent object structure. Needed if Purchase Manager is integrated through Basware API. Not used with P2P. Note that the child 'parents' -object inside the root 'parents' -object can contain multiple nested child elements.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        },
        "companies": {
          "description": "List of company units to associate account to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "LanguageTranslationEntity": {
      "required": [
        "translation",
        "language"
      ],
      "type": "object",
      "properties": {
        "translation": {
          "maxLength": 2000,
          "minLength": 2,
          "type": "string",
          "example": "Office supplies"
        },
        "language": {
          "maxLength": 10,
          "minLength": 2,
          "type": "string",
          "example": "en-US"
        }
      }
    },
    "ParentEntity": {
      "required": [
        "parentType",
        "parentCodes"
      ],
      "type": "object",
      "properties": {
        "parentType": {
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "Department"
        },
        "parentCodes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        }
      }
    },
    "AccountCompanyEntity": {
      "required": [
        "companyCode",
        "inherit",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that the account is mapped to",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "inherit": {
          "description": "The value specifies whether the property is inherited to lower organizations.",
          "type": "boolean",
          "example": false
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "AdvancedPermissionResponse": {
      "type": "object",
      "properties": {
        "advancedPermissions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedPermissionEntity"
          }
        }
      }
    },
    "AdvancedPermissionEntity": {
      "required": [
        "loginAccount",
        "limit",
        "priorityIndex",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "loginAccount": {
          "description": "Specifies the user's login name",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "BASWARE\\JYRKI"
        },
        "rowApproveIterationCount": {
          "format": "int32",
          "description": "This field is used to define if the user is shown in a picker in row approval.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "permissionCode1": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "6210"
        },
        "permissionCode2": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "6210,6211"
        },
        "permissionCode3": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "6209-6230"
        },
        "permissionCode4": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "*"
        },
        "permissionCode5": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "6209-6290"
        },
        "permissionCode6": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "Dimension6"
        },
        "permissionCode7": {
          "description": "Allows user to approve coding lines based on dimension values (cost center, account, etc) when row approval and advanced permissions are in use. Dimensions are mapped to permission codes in P2P. The value of each individual field can be one of the following: 1) \"*\" (asterisk, meaning \"all\"), 2) \u200blist of comma separated values such as: \"123, 23, 45, A18\", 3) single range of values such as: \"10-100\". If a combination of these is required, multiple records can be posted for the same user. The field can also be left empty.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "Dimension7"
        },
        "limit": {
          "format": "double",
          "description": "Defines the user's coding line approval limit.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "priorityIndex": {
          "format": "int32",
          "description": "If there is more than one approver in the user picker, the priority index defines the order of the approvers in the picker.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "module": {
          "description": "This field defines the P2P module. Possible values are: \"Invoice Administration and Purchase\", \"Invoice Administration\", \"Purchase\u200b\".",
          "maxLength": 28,
          "minLength": 0,
          "type": "string",
          "example": "Purchase"
        },
        "excludedValue": {
          "description": "This column is used to exclude a user from a process for coding rows requiring approval. When a user is excluded, the user will not receive an invoice for approval. The value can be anything, for example numeric \u200b(123, 23,45 - comma separated values), alphanumeric, special characters except single quote ('). The field can also be left empty. This field is based on tenant settings.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "ExcludedValue1"
        },
        "companies": {
          "description": "List of company units to associate advanced permission to P2P organization hierarchy.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedPermissionCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "AdvancedPermissionCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that is attached to the advanced user right.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "AdvancedValidationResponse": {
      "required": [
        "advancedValidations"
      ],
      "type": "object",
      "properties": {
        "advancedValidations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedValidationEntity"
          }
        }
      }
    },
    "AdvancedValidationEntity": {
      "required": [
        "interface",
        "keyValue",
        "dimension1",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "interface": {
          "description": "Interface field for validation rule",
          "maxLength": 40,
          "minLength": 1,
          "type": "string",
          "example": "AdvancedValidation"
        },
        "keyValue": {
          "description": "Key value for validation rule, e.g. value of account code, value of costcenter cote, ...",
          "maxLength": 40,
          "minLength": 1,
          "type": "string",
          "example": "10012"
        },
        "dimension1": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension1From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension1To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension2": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension2From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension2To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension3": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension3From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension3To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension4": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension4From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension4To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension5": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension5From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension5To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension6": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension6From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension6To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension7": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension7From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension7To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "companies": {
          "description": "List of company units to associate account to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedValidationCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "AdvancedValidationCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Company code identifier. Corresponds to company code used in P2P. Used as key in this array.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "active": {
          "description": "Active / Not active setting",
          "type": "boolean",
          "example": true
        }
      }
    },
    "CostCenterResponse": {
      "required": [
        "costCenters"
      ],
      "type": "object",
      "properties": {
        "costCenters": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCenterEntity"
          }
        }
      }
    },
    "CostCenterEntity": {
      "required": [
        "costCenterCode",
        "costCenterNames",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "costCenterCode": {
          "description": "Cost center code (used for invoice coding).",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "35680"
        },
        "costCenterNames": {
          "description": "Cost center name(s) (used for invoice coding). Please always include 'en-US' language tag for Basware global support, as well as any local-language tag being used. If both translations are not available, please use the same string with both language tags.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "parents": {
          "description": "Purchase Manager parent object structure. Needed if Purchase Manager is integrated through Basware API. Not used with P2P. Note that the child \u2018parents\u2019 -object inside the root \u2018parents\u2019 -object can contain multiple nested child elements.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        },
        "companies": {
          "description": "List of company units to associate costcenter to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCenterCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "CostCenterCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that the cost center is mapped to",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW00"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "ErrorFeedbackResponse": {
      "required": [
        "errorList"
      ],
      "type": "object",
      "properties": {
        "errorList": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFeedbackEntity"
          }
        }
      }
    },
    "ErrorFeedbackEntity": {
      "type": "object",
      "properties": {
        "id": {
          "description": "Basware internal ID for the error.",
          "type": "string"
        },
        "requestId": {
          "description": "RequestId of the message posted by Customer to basware API, on which the error occurred. MessageId is returned by Basware API on response header when sending messages to the API.",
          "type": "string"
        },
        "externalCode": {
          "description": "ExternalCode of the record on which the error occurred.",
          "type": "string"
        },
        "errorEntity": {
          "description": "JSON object containing the data posted for the record containing the error.",
          "type": "string"
        },
        "entityType": {
          "description": "Entity (interface) type of the record on which the error occurred.",
          "enum": [
            "Account",
            "Contract",
            "CostCenter",
            "TaxCode",
            "ExchangeRate",
            "PaymentTerm",
            "Budget",
            "User",
            "Project",
            "MatchingOrder",
            "MatchingOrderLine",
            "AccountingDocument",
            "GenericList",
            "MatchingGoodsReceipt",
            "AdvancedPermission",
            "TransferResponse",
            "PaymentResponse",
            "PrebookResponse",
            "Vendor",
            "AdvancedValidation"
          ],
          "type": "string"
        },
        "errorStamp": {
          "format": "date-time",
          "description": "Timestamp when the error occurred.",
          "type": "string"
        },
        "errors": {
          "description": "List of errors which occurred on the record.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetSystem": {
          "description": "Target system from which the error originated. Examples: P2P, Vendor Manager, Purchase Manager.",
          "type": "string"
        }
      }
    },
    "ExchangeRateResponse": {
      "required": [
        "exchangeRates"
      ],
      "type": "object",
      "properties": {
        "exchangeRates": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRateEntity"
          }
        }
      }
    },
    "ExchangeRateEntity": {
      "required": [
        "rate",
        "currencyCodeTo",
        "currencyCodeFrom",
        "validFrom",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "rate": {
          "format": "double",
          "description": "Defines the selected currency's exchange rate",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": "0.13412784"
        },
        "currencyCodeTo": {
          "description": "The currency code defines the base currency.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "EUR"
        },
        "currencyCodeFrom": {
          "description": "The currency code defines the quote currency.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "AUD"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Defines the date when the exchange rate becomes valid",
          "type": "string",
          "example": "2012-01-02"
        },
        "companies": {
          "description": "List of company units to associate exchangerate to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRateCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "ExchangeRateCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines the organization that the exchange rate is mapped to",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW00"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "GenericListResponse": {
      "required": [
        "listItems"
      ],
      "type": "object",
      "properties": {
        "listItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericListEntity"
          }
        }
      }
    },
    "GenericListEntity": {
      "required": [
        "externalCode",
        "inherit",
        "companies"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Id of the list entry.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6532e1d70e194ff8a193e42beab4a0d9"
        },
        "inherit": {
          "description": "Gets or Sets Inherit",
          "type": "boolean",
          "example": false
        },
        "text_1": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "032141"
        },
        "text_2": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "John Smith"
        },
        "text_3": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "true"
        },
        "text_4": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "false"
        },
        "text_5": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "620018A"
        },
        "text_6": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_7": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_8": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_9": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_10": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_11": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_12": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_13": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_14": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_15": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_16": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_17": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_18": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_19": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_20": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_21": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_22": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_23": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_24": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "text_25": {
          "description": "Text column for lists.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "number_1": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 10000
        },
        "number_2": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_3": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_4": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_5": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_6": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_7": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_8": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_9": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_10": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_11": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_12": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_13": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_14": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "number_15": {
          "format": "double",
          "description": "Numeric column for lists.",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": 0
        },
        "dateValue_1": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_2": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_3": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_4": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_5": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_6": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_7": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_8": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_9": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_10": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_11": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_12": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_13": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_14": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "dateValue_15": {
          "format": "date-time",
          "description": "DateTime column for lists.",
          "type": "string",
          "example": "2019-11-11"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "companies": {
          "description": "List of company units to associate genericlist to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericListCompanyEntity"
          }
        },
        "parents": {
          "description": "Purchase Manager parent object structure. Needed if Purchase Manager is integrated through Basware API. Not used with P2P. Note that the child 'parents' -object inside the root 'parents' -object can contain multiple nested child elements.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        },
        "listContent": {
          "description": "Purchase manager list identifier. Needed if Purchase Manager is integrated through Basware API. Not used by P2P.",
          "enum": [
            "Plant",
            "ProfitCenter",
            "BusinessUnit",
            "Project",
            "ProjectSub",
            "Employee",
            "Vehicle",
            "Customer",
            "AccAssignmentCategory",
            "Budget",
            "Service",
            "BusinessArea",
            "PartnerProfitCenter",
            "FixedAsset",
            "FixedAssetSubCode",
            "WorkOrderCode",
            "WorkOrderSubCode",
            "CommitmentItem",
            "ControllingArea",
            "FunctionalArea",
            "Network",
            "NetworkActivity",
            "Tax",
            "TaxJurisdiction",
            "Dimension1",
            "Dimension2",
            "Dimension3",
            "Dimension4",
            "Dimension5",
            "Dimension6",
            "Dimension7",
            "Dimension8",
            "Dimension9",
            "Dimension10",
            "InternalOrder",
            "SalesOrder",
            "SalesOrderSub"
          ],
          "type": "string"
        }
      }
    },
    "GenericListCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Company code identifier. Corresponds to company code used in P2P. Used as key in this array.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "Gets or Sets Active",
          "type": "boolean"
        }
      }
    },
    "GetBatchRequest": {
      "type": "object",
      "properties": {
        "externalCodes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": "[\"qwer-ertert-34der\", \"12huh2e-4229er2j-2324\"]"
        }
      }
    },
    "VendorResponse": {
      "required": [
        "vendorEntities"
      ],
      "type": "object",
      "properties": {
        "vendorEntities": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorEntity"
          }
        }
      }
    },
    "VendorEntity": {
      "required": [
        "externalCode",
        "vendorCode",
        "name",
        "companies"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Specifies a unique code to identify vendor for updates through Basware API.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "c6437eef-0d71-4cb0-8a6e-7f114831478d"
        },
        "vendorCode": {
          "description": "Vendor code. Normally the vendor code used by Customer ERP system.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "81264"
        },
        "vendorParent": {
          "description": "VendorCode of parent. Not used in P2P Alusta.",
          "type": "string",
          "example": "AS12154"
        },
        "buvid": {
          "description": "Vendor identifier generated by Basware. Not to be included when posting data.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "f0b29a62-a5e0-4285-8ceb-11a92eccf212"
        },
        "name": {
          "description": "Vendor name.",
          "maxLength": 250,
          "minLength": 1,
          "type": "string",
          "example": "Things and Gadgets Inc."
        },
        "sourceSystem": {
          "description": "Name of the source system, e.g. ERP instance",
          "maxLength": 36,
          "minLength": 0,
          "type": "string",
          "example": "SAPEUR1"
        },
        "description": {
          "description": "Freetext description of vendor",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "supplierAssignedAccountId": {
          "description": "Customer ID in vendor's system.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "eligibleForSourcing": {
          "description": "Label the vendors that are eligible for sourcing activities.",
          "type": "boolean"
        },
        "identifiers": {
          "description": "Vendor identifiers",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorIdentifierEntity"
          }
        },
        "addresses": {
          "description": "Vendor addresses",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAddressEntity"
          }
        },
        "contacts": {
          "description": "Vendor contacts",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorContactEntity"
          }
        },
        "deliveryTerm": {
          "$ref": "#/definitions/VendorDeliveryTermEntity"
        },
        "paymentMeans": {
          "description": "Vendor payment means",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorPaymentMeanEntity"
          }
        },
        "paymentTerms": {
          "$ref": "#/definitions/VendorPaymentTermEntity"
        },
        "orderingDetails": {
          "$ref": "#/definitions/VendorOrderingDetailsEntity"
        },
        "processingStatus": {
          "$ref": "#/definitions/VendorProcessingStatusEntity"
        },
        "tags": {
          "description": "Tags are used to group the vendors. Not used in P2P.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorTagEntity"
          }
        },
        "customFields": {
          "description": "Custom fields are used to provide additional data. Posted as \u2018Supplier additional data\u2019 -fields to P2P.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAdditionalFieldEntity"
          }
        },
        "companies": {
          "description": "List of company units to associate vendor to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorCompanyEntity"
          }
        }
      }
    },
    "VendorIdentifierEntity": {
      "required": [
        "id",
        "schemeId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Value for the identifier specified in 'schemeId'.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "0592542-4"
        },
        "schemeId": {
          "description": "Supplier identifier key. Needs to match with identifier types created in P2P \"identifier configuration\". Typically used for Supplier VAT id, local registry id, DUNS, GLN, etc. Example identifier key: 'PartyId', commonly used for Supplier's VAT identifier.",
          "maxLength": 32,
          "minLength": 1,
          "type": "string",
          "example": "PartyID"
        },
        "defaultPartyId": {
          "description": "Is this the default identifier: treu / false.",
          "type": "boolean"
        }
      }
    },
    "VendorAddressEntity": {
      "required": [
        "externalCode",
        "name"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Specifies a unique external code for the vendor.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "d6437eef-0d71-4cb0-8a6e-7f114831479d"
        },
        "name": {
          "description": "Specifies the address' name for the vendor.",
          "maxLength": 200,
          "minLength": 1,
          "type": "string",
          "example": "Remittance address"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "This is used as Remit To address"
        },
        "addressType": {
          "enum": [
            "AdditionalAddress",
            "VisitingAddress",
            "RemittanceAddress",
            "DeliveryAddress",
            "PostalAddress",
            "RegistrationAddress"
          ],
          "type": "string"
        },
        "addressLine1": {
          "description": "Specifies the type of the address for the vendor.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "1800 Main Street"
        },
        "addressLine2": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "addressLine3": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "cityName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Dallas"
        },
        "postalZone": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "75201"
        },
        "poBox": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "724"
        },
        "streetName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Burlington Avenue"
        },
        "locality": {
          "description": "Attribute to postalAddress. This field is required in UK if a similar road name exists within a post town area.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Burlington"
        },
        "countrySubEntity": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "TX"
        },
        "countrySubEntityDescription": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Texas"
        },
        "countryId": {
          "description": "Defines the country ID for the vendor.",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        },
        "default": {
          "description": "Defines which of the following addresses is the default address for the vendor: Postal address, Physical address, Delivery address.",
          "type": "boolean"
        },
        "additionalAddressFields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAddressPartEntity"
          }
        }
      }
    },
    "VendorContactEntity": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the contact. Used as a key in list of contacts.",
          "maxLength": 200,
          "minLength": 1,
          "type": "string",
          "example": "DeliveryContact1"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "Use this as a primary contact"
        },
        "telephone": {
          "description": "Specifies the vendor's telephone number.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "555-3342-454"
        },
        "telefax": {
          "description": "Specifies the vendor's fax number.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "555-3342-45412"
        },
        "email": {
          "description": "Specifies the vendor's email address.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "mrsmith@business.org"
        },
        "website": {
          "description": "Specifies the vendor's web site address.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "www.mrSmith.com"
        },
        "role": {
          "enum": [
            "AdditionalContact",
            "PrimaryContact",
            "SecondaryContact"
          ],
          "type": "string"
        }
      }
    },
    "VendorDeliveryTermEntity": {
      "required": [
        "deliveryTermCode"
      ],
      "type": "object",
      "properties": {
        "deliveryTermCode": {
          "description": "Specifies the vendor's delivery term code.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "description": "Default delivery term description.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorPaymentMeanEntity": {
      "required": [
        "paymentMeansCode"
      ],
      "type": "object",
      "properties": {
        "paymentMeansCode": {
          "description": "Specifies the vendor's payment term code",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "A001"
        },
        "description": {
          "description": "Specifies the vendor's payment term description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "Payment by a pre-printed form (check)."
        },
        "currencyCode": {
          "description": "Specifies the vendor's currency code",
          "maxLength": 25,
          "minLength": 3,
          "type": "string",
          "example": "USD"
        },
        "financialAccounts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorfinancialAccountsEntity"
          }
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "VendorPaymentTermEntity": {
      "required": [
        "paymentTermCode"
      ],
      "type": "object",
      "properties": {
        "paymentTermCode": {
          "description": "Specifies the vendor's payment term code",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "Net90"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "Payment 90 days after invoice date"
        }
      }
    },
    "VendorOrderingDetailsEntity": {
      "type": "object",
      "properties": {
        "orderingFormat": {
          "description": "Specifies the order format that the supplier uses with purchase orders",
          "enum": [
            "UBL",
            "EHFXML21",
            "email",
            "other"
          ],
          "type": "string"
        },
        "orderingLanguage": {
          "description": "Specifies the supplier's language",
          "maxLength": 8,
          "minLength": 0,
          "type": "string",
          "example": "en-US"
        },
        "orderEmail": {
          "description": "Specifies the supplier's email address where the purchase order is sent to",
          "maxLength": 320,
          "minLength": 3,
          "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
          "type": "string",
          "example": "vendor@vendor.org"
        },
        "orderProcessType": {
          "description": "Name of order process. Not used in P2P Alusta.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "minimumOrderAllowed": {
          "format": "double",
          "description": "Value of the minimum order allowed. Not used in P2P Alusta.",
          "type": "number"
        },
        "isTaxable": {
          "description": "Are purchases from this vendor taxable. Not used in P2P Alusta.",
          "type": "boolean"
        },
        "automaticallyReceiveOnInvoice": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "automaticallyReceiveOnOrder": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "hasActiveCatalog": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "createOrderAutomatically": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "deliverOrderAutomatically": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "noFreeformItems": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "sendToNetwork": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        }
      }
    },
    "VendorProcessingStatusEntity": {
      "type": "object",
      "properties": {
        "active": {
          "description": "Is the vendor active : true / false.",
          "type": "boolean"
        },
        "paymentDenied": {
          "description": "Is payment block is enabled for the vendor: true / false.",
          "type": "boolean",
          "example": false
        }
      }
    },
    "VendorTagEntity": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the tag. Used as key in this array.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "tagGroup": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorAdditionalFieldEntity": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of Supplier additional data key field.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "description": "Value for key field specified above.",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "groupName": {
          "description": "Group name. Not used in P2P.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorCompanyEntity": {
      "required": [
        "companyCode"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Specifies the organization that the vendor is mapped to.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW00"
        },
        "inheritToChildUnits": {
          "description": "Specifies whether the vendor is inherited to lower organizations.",
          "type": "boolean"
        }
      }
    },
    "VendorAddressPartEntity": {
      "type": "object",
      "properties": {
        "key": {
          "enum": [
            "AdditionalField1",
            "AdditionalField2",
            "AdditionalStreetName",
            "BlockName",
            "BuildingName",
            "BuildingNumber",
            "CitySubDivisionName",
            "Country",
            "Department",
            "District",
            "Email",
            "Floor",
            "GlobalLocationNumber",
            "InhouseEmail",
            "MarkAttention",
            "MarkCare",
            "Region",
            "Room",
            "CoordinateSystemCode",
            "PlotIdentification",
            "LatitudeDegreesMeasure",
            "LatitudeDirectionCode",
            "LatitudeMinutesMeasure",
            "LongitudeDegreesMeasure",
            "LongitudeDirectionCode",
            "LongitudeMinutesMeasure"
          ],
          "type": "string"
        },
        "value": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorfinancialAccountsEntity": {
      "type": "object",
      "properties": {
        "financialInstitution": {
          "$ref": "#/definitions/FinancialInstitutionEntity"
        },
        "financialAccountIdentifiers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialAccountIdentifierEntity"
          }
        }
      }
    },
    "FinancialInstitutionEntity": {
      "required": [
        "name",
        "id",
        "schemeId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Specifies the vendor's bank name\r\nSpecifies the vendor's bank ID",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Nordea UK"
        },
        "id": {
          "maxLength": 20,
          "minLength": 1,
          "type": "string",
          "example": "NDEAGB2L"
        },
        "schemeId": {
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "BIC"
        },
        "branchId": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "branchIdSchemeId": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "countryId": {
          "description": "Defines the country ID for the vendor",
          "maxLength": 2,
          "minLength": 2,
          "type": "string",
          "example": "US"
        }
      }
    },
    "FinancialAccountIdentifierEntity": {
      "required": [
        "schemeId"
      ],
      "type": "object",
      "properties": {
        "schemeId": {
          "description": "Account type: BBAN / IBAN.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "IBAN"
        },
        "description": {
          "description": "Description.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "UK only"
        },
        "id": {
          "description": "The account number.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "GB29 NWBK 6016 1331 9268 19"
        },
        "accountHolderName": {
          "description": "Account holder name.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "United Parcels UK"
        },
        "currencyCode": {
          "description": "Currency code of the account.",
          "maxLength": 3,
          "minLength": 3,
          "type": "string",
          "example": "GBP"
        },
        "default": {
          "description": "Is this the default account (true / false).",
          "type": "boolean"
        }
      }
    },
    "VendorCandidateModelEntity": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Specifies a unique code to identify vendor for updates through Basware API.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string",
          "example": "c6437eef-0d71-4cb0-8a6e-7f114831478d"
        },
        "vendorCode": {
          "description": "Vendor code to be selected by user onto invoice. Normally the vendor code used by Customer ERP system.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "ADFS1254"
        },
        "companies": {
          "description": "List of company units to associate vendor to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorCompanyEntity"
          }
        },
        "vendorParent": {
          "description": "VendorCode of parent. Not used in P2P Alusta.",
          "type": "string",
          "example": "AS12154"
        },
        "buvid": {
          "description": "Vendor identifier generated by Basware. Not to be included when posting data.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "f0b29a62-a5e0-4285-8ceb-11a92eccf212"
        },
        "name": {
          "description": "Vendor name.",
          "maxLength": 250,
          "minLength": 1,
          "type": "string",
          "example": "Things and Gadgets Inc."
        },
        "sourceSystem": {
          "description": "Name of the source system, e.g. ERP instance",
          "maxLength": 36,
          "minLength": 0,
          "type": "string",
          "example": "SAPEUR1"
        },
        "description": {
          "description": "Freetext description of vendor",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": ""
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "supplierAssignedAccountId": {
          "description": "Customer ID in vendor's system.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "eligibleForSourcing": {
          "description": "Label the vendors that are eligible for sourcing activities.",
          "type": "boolean"
        },
        "identifiers": {
          "description": "Vendor identifiers",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorIdentifierEntity"
          }
        },
        "addresses": {
          "description": "Vendor addresses",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAddressEntity"
          }
        },
        "contacts": {
          "description": "Vendor contacts",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorContactEntity"
          }
        },
        "deliveryTerm": {
          "$ref": "#/definitions/VendorDeliveryTermEntity"
        },
        "paymentMeans": {
          "description": "Vendor payment means",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorPaymentMeanEntity"
          }
        },
        "paymentTerms": {
          "$ref": "#/definitions/VendorPaymentTermEntity"
        },
        "orderingDetails": {
          "$ref": "#/definitions/VendorOrderingDetailsEntity"
        },
        "processingStatus": {
          "$ref": "#/definitions/VendorProcessingStatusEntity"
        },
        "tags": {
          "description": "Tags are used to group the vendors. Not used in P2P.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorTagEntity"
          }
        },
        "customFields": {
          "description": "Custom fields are used to provide additional data. Posted as \u2018Supplier additional data\u2019 -fields to P2P.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAdditionalFieldEntity"
          }
        }
      }
    },
    "VendorCandidateDataModel": {
      "type": "object",
      "properties": {
        "baswareAccountId": {
          "type": "string"
        },
        "buvid": {
          "type": "string"
        }
      }
    },
    "OrderLineResponse": {
      "required": [
        "matchingOrderLines"
      ],
      "type": "object",
      "properties": {
        "matchingOrderLines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineEntity"
          }
        }
      }
    },
    "OrderLineEntity": {
      "required": [
        "externalCode",
        "orderExternalCode",
        "lineNumber",
        "quantity",
        "matchingMode"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Identifies the order line for future updates through Basware API.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6741ecc7-848a-443c-83ad-ea95e4df06yh"
        },
        "orderExternalCode": {
          "description": "Links the order line to the corresponding order header. The header needs to have been posted to API before order line(s).",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6741ecc7-848a-443c-83ad-ea95e4df06fa"
        },
        "lineNumber": {
          "description": "Purchase order row number.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "10"
        },
        "sortNumber": {
          "format": "int32",
          "description": "Technical row number, used also for sorting. Typically the same as purchase order row number.",
          "type": "integer",
          "example": "10"
        },
        "quantity": {
          "format": "double",
          "description": "Defines how many items a customer has purchased. The quantity must be higher than zero. With isBlanketOrderLine TRUE, the quantity must be set 1.",
          "type": "number",
          "example": "1"
        },
        "netSum": {
          "format": "double",
          "description": "Total amount of the ordered amount excluding tax amount of the purchase order line.",
          "type": "number",
          "example": "1000"
        },
        "grossSum": {
          "format": "double",
          "description": "Total amount of the ordered amount including tax amount of the purchase order line.",
          "type": "number",
          "example": "10"
        },
        "currencyCode": {
          "description": "A code that identifies the currency of the total payable amount in the purchase order line. Valid values are in ISO 4217 Alpha format. When empty, the currency from the purchase order is used. It is possible to have different currencies in order lines with different needs like products and transportation costs. Exchange rates for matching are based on the exchange rate date defined in the purchase invoice. Gain/loss is expected based on the difference between rate on receive date and rate on invoice date.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "USD"
        },
        "matchingMode": {
          "enum": [
            "Standard",
            "Blanket",
            "Return"
          ],
          "type": "string"
        },
        "isReceiptRequired": {
          "description": "Indicates whether the line item requires receipts. When FALSE, the line item does not require receipts. When TRUE, the system evaluates the received quantity and sum at the time of matching.",
          "type": "boolean",
          "example": "False"
        },
        "isReceiptBasedMatching": {
          "description": "Indicates whether the matching takes place with line item or a goods receipt. When FALSE, a matched invoice is associated with the purchase order line. When TRUE, an invoice is matched with a goods receipt that belongs to the line item.",
          "type": "boolean",
          "example": "False"
        },
        "isOverreceivalAllowed": {
          "description": "Indicates whether over-delivery is allowed for the line item. When FALSE, the system evaluates the matching using the ordered quantity instead of possible higher quantity from receipts.",
          "type": "boolean",
          "example": "False"
        },
        "isClosed": {
          "description": "Indicates whether the line item is closed.  When TRUE, new receipts are not expected for the order line and matching is possible only with unmatched or partly matched goods receipts that have been recorded to the purchase order earlier. When FALSE, the order line is open for new deliveries and matching.",
          "type": "boolean",
          "example": "False"
        },
        "isDeleted": {
          "description": "Indicates whether the line item is deleted. If TRUE, the line item has been marked as deleted. Deletion is possible only if the line has not been matched.",
          "type": "boolean",
          "example": "False"
        },
        "isSelfApproved": {
          "description": "Indicates whether the line item has passed the approval flow set for the purchasing process. If TRUE, the line item has not been approved.",
          "type": "boolean",
          "example": "False"
        },
        "uom": {
          "description": "Unit of measure of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "PCE"
        },
        "subUOM": {
          "description": "Alternative unit of measurement of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "G"
        },
        "netPrice": {
          "format": "double",
          "description": "The price of the line item excluding tax.",
          "type": "number",
          "example": "100"
        },
        "grossPrice": {
          "format": "double",
          "description": "The price of the line item including tax.",
          "type": "number",
          "example": "116"
        },
        "priceUnit": {
          "description": "The unit by which the line item is sold.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "priceUnitDescription": {
          "description": "Name of the price unit",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "taxCode": {
          "description": "Tax code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "VN"
        },
        "taxPercent": {
          "format": "double",
          "description": "Tax percentage.",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number",
          "example": "16"
        },
        "taxPercent2": {
          "format": "double",
          "description": "Return tax.",
          "type": "number",
          "example": 0
        },
        "taxSum": {
          "format": "double",
          "description": "Tax sum.",
          "type": "number",
          "example": "116"
        },
        "taxSum2": {
          "format": "double",
          "description": "Tax sum 2.",
          "type": "number"
        },
        "invoicedQuantity": {
          "format": "double",
          "description": "Quantity that already has been matched from the line item",
          "type": "number",
          "example": 0
        },
        "invoicedNetSum": {
          "format": "double",
          "description": "Sum that already has been matched, excluding tax",
          "type": "number",
          "example": 0
        },
        "invoicedGrossSum": {
          "format": "double",
          "description": "Sum that already has been matched, including tax",
          "type": "number",
          "example": 0
        },
        "validFrom": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order starts. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-01-01T07:36:13.053Z"
        },
        "validTo": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order ends. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-12-31T07:36:13.053Z"
        },
        "productCode": {
          "description": "A code that identifies the purchased items to the party that is the supplier of the goods/services. This is typically matched to the product code on invoice lines.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "1950469687"
        },
        "productName": {
          "description": "Name of the product",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Envelopes A5 - 1000 pce/package"
        },
        "materialGroup": {
          "description": "A code that groups together several materials or services with the same characteristics",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Communication"
        },
        "globalTradeItemNumber": {
          "description": "The GTIN is a globally unique 14-digit number used to identify trade items, products, or services. Can also be used to match order rows to invoice lines.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "00012345678905"
        },
        "unspsc": {
          "description": "The United Nations Standard Products and Services Code is a unique 8-digit number used to identify trade items, products, and services. Can also be used to match order rows to invoice lines.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "44121504"
        },
        "buyerProductCode": {
          "description": "A code that identifies purchased items for internal reporting and communication",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "env0002"
        },
        "description": {
          "description": "Description of the business document's line item",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "comment": {
          "description": "Free-form text pertinent to this document, conveying information that is not contained explicitly in other structures",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "Nameofcompany"
        },
        "requestedDeliveryDate": {
          "format": "date-time",
          "description": "Date the goods are to be delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "actualDeliveryDate": {
          "format": "date-time",
          "description": "Date the goods are to be delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "text1": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "email"
        },
        "text2": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "phone"
        },
        "text3": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "email"
        },
        "text4": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "officesite"
        },
        "text5": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "trolly"
        },
        "text6": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "trumph"
        },
        "text7": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "businessid"
        },
        "text8": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "officesite"
        },
        "text9": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "officesite"
        },
        "text10": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "officesite"
        },
        "numeric1": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric2": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric3": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric4": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric5": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "orderLineCoding": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineCodingEntity"
          }
        },
        "goodsReceipts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoodsReceiptEntity"
          }
        },
        "referenceUsers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineUserEntity"
          }
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrderLineCodingEntity": {
      "required": [
        "externalCode",
        "rowIndex",
        "allocatedQuantity"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Unique identifier used for updates through Basware API.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "1547e437-1231-ad32-dff2-132985aae212"
        },
        "rowIndex": {
          "format": "int32",
          "description": "Row number of coding row on the PO line.",
          "maximum": 100000.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "netTotal": {
          "format": "double",
          "description": "Represents total excluding tax that is allocated for the accounting dimensions set in the coding row item",
          "type": "number"
        },
        "grossTotal": {
          "format": "double",
          "description": "Represents total including tax that is allocated for the accounting dimensions set in the coding row item",
          "type": "number"
        },
        "accountCode": {
          "description": "Account code. A code that identifies the general ledger account to where the matched spend is recorded.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "ACC11"
        },
        "accountName": {
          "description": "Name of the account",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Other marketing expences"
        },
        "costCenterCode": {
          "description": "Cost center code. A code that identifies the part of an organization to which costs may be charged for accounting purposes",
          "maxLength": 200,
          "minLength": 0,
          "type": "string",
          "example": "1010"
        },
        "costCenterName": {
          "description": "Name of the cost center",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Presales and Marketing1"
        },
        "projectCode": {
          "description": "A code that identifies the project when the spend is required to be recorded",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "PP1"
        },
        "projectName": {
          "description": "Name of the project",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Basware Connect 20181"
        },
        "conversionNumerator": {
          "format": "double",
          "description": "A conversion factor is used to change the units of a nominator in quantity without changing its value. For example, one envelope weighs 7 g.",
          "type": "number"
        },
        "conversionDenominator": {
          "format": "double",
          "description": "A conversion factor is used to change the units of a denominator in quantity without changing its value.",
          "type": "number"
        },
        "conversionDeNumerator": {
          "format": "double",
          "type": "number"
        },
        "taxCode": {
          "description": "Tax code.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent": {
          "format": "double",
          "description": "Tax percent.",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "taxPercent2": {
          "format": "double",
          "description": "Tax percent 2.",
          "type": "number"
        },
        "taxSum": {
          "format": "double",
          "description": "Tax sum.",
          "type": "number"
        },
        "taxSum2": {
          "format": "double",
          "description": "Tax sum 2.",
          "type": "number"
        },
        "partnerProfitCenter": {
          "description": "Identifies transfers of goods and services between profit centers",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "PPC1"
        },
        "fixedAssetCode": {
          "description": "Long-term tangible piece of property that a company owns and uses in its operations to generate income",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "FA1"
        },
        "fixedAssetName": {
          "description": "Name of the fixed asset",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "FANA"
        },
        "materialGroup": {
          "description": "A code that groups together several materials or services with the same characteristics",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "Steel"
        },
        "fixedAssetSubCode": {
          "description": "A code identifying an accessory / special equipment that you maintain on a fixed asset",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "FAA1"
        },
        "fixedAssetSubName": {
          "description": "Name of the sub-asset",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "FTBTT"
        },
        "internalOrderCode": {
          "description": "A code to identify an internal order that normally is used to plan, collect, and settle the costs of internal jobs and tasks",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "456465464651"
        },
        "internalOrderName": {
          "description": "Name of the internal order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "internal1"
        },
        "profitCenterCode": {
          "description": "A code to identify a part of a business which is expected to make an identifiable contribution to the organization's profits",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "PCC1"
        },
        "profitCenterName": {
          "description": "Name of the profit center",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "PCCN"
        },
        "businessUnitCode": {
          "description": "A code to identify a division of a large company that operates as an independent enterprise with responsibility for a particular range of products or activities",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "BUC1"
        },
        "businessUnitName": {
          "description": "Name of the business unit",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "BUCN"
        },
        "projectSubCode": {
          "description": "A code to identify a project that is part of a larger project",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "1234234"
        },
        "projectSubName": {
          "description": "Name of the sub-project",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "PCCSN"
        },
        "employeeCode": {
          "description": "A code to identify an employee related to the cost",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "1877878"
        },
        "employeeName": {
          "description": "Name of the employee",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "AMMY"
        },
        "vehicleNumber": {
          "description": "A code to identify a vehicle related to the cost",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "1454"
        },
        "vehicleName": {
          "description": "Name of the vehicle",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Volvo"
        },
        "salesOrderCode": {
          "description": "A code to identify a sales order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "V22"
        },
        "salesOrderName": {
          "description": "Name of the sales order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Volvotr"
        },
        "salesOrderSubCode": {
          "description": "A code to identify another order that is part of a sales order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "432423"
        },
        "salesOrderSubName": {
          "description": "Name of the sub sales order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "newonevr"
        },
        "customerCode": {
          "description": "A code to identify a customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "VR454"
        },
        "customerName": {
          "description": "Name of the customer",
          "maxLength": 50,
          "minLength": 0,
          "type": "string",
          "example": "Hudson"
        },
        "accAssignmentCategoryCode": {
          "description": "A code to identify account assignment category",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryName": {
          "description": "A code to identify a budget where the cost belongs",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetCode": {
          "description": "Name of the bugdet",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceCode": {
          "description": "A code to identify a service related to the cost",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceName": {
          "description": "Name of the service",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaCode": {
          "description": "A code to identify a business area",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaName": {
          "description": "Name of the business area",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxJurisdictionCode": {
          "description": "A code to identify which area or which tax authority is involved",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "subUOM": {
          "description": "Alternative unit of measurement of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as a string.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderCode": {
          "description": "A code to identify work order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderName": {
          "description": "Name of the work order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubCode": {
          "description": "A code to identify another order related to work order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubName": {
          "description": "Name of the sub work order",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "commitmentItem": {
          "description": "A code to identify an element that represents the functional grouping of expenditures and revenues within a financial management area",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "controllingArea": {
          "description": "A code to identify an organizational unit in an organization that represents a closed system used for cost accounting purposes",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "functionalArea": {
          "description": "A code to identify a functional area, like teams of employees, who have similar skills and expertise",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "dimCode1": {
          "description": "DimCode 1-10: Code fields for Customer-specific coding dimensions.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode2": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode3": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode4": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode5": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode6": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode7": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode8": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode9": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode10": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName1": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName2": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName3": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName4": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName5": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName6": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName7": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName8": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName9": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName10": {
          "description": "Custom field in the business document",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "num1": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "num2": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "num3": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "num4": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "num5": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "allocatedQuantity": {
          "format": "double",
          "type": "number"
        },
        "text1": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "network": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "networkActivity": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GoodsReceiptEntity": {
      "required": [
        "externalCode",
        "goodsReceiptNumber",
        "quantity"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Identifies the goods receipt for future updates through Basware API. Typically Generated by the system calling Basware API.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "goodsReceiptNumber": {
          "description": "Goods receipt number.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "goodsReceiptLineNumber": {
          "description": "Goods receipt line number.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "referenceGRExternalCode": {
          "description": "externalCode of the original receipt when this receipt item is a negative return/cancellation item for an earlier receipt.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "deliveryNoteNumber": {
          "description": "Identifier of the delivery from where the receipt was made.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "bestFitGrouping": {
          "description": "Grouping factor for received items that are invoiced together without any delivery indicator. The value can be for example a delivery note number or a delivery date. Used in best-fit matching.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Received quantity",
          "type": "number"
        },
        "netSum": {
          "format": "double",
          "description": "Total amount of the received item excluding tax",
          "type": "number"
        },
        "grossSum": {
          "format": "double",
          "description": "Total amount of the received item including tax",
          "type": "number"
        },
        "netPrice": {
          "format": "double",
          "description": "The price of the received item excluding tax",
          "type": "number"
        },
        "grossPrice": {
          "format": "double",
          "description": "The price of the received item including tax",
          "type": "number"
        },
        "isDeleted": {
          "description": "Indicates whether the received item is deleted. If TRUE, the received item has been marked as deleted. Deletion is possible only if the line has not been matched.",
          "type": "boolean"
        },
        "invoicedQuantity": {
          "format": "double",
          "description": "Quantity that already has been matched from the line item",
          "type": "number"
        },
        "invoicedNetSum": {
          "format": "double",
          "description": "Sum that already has been matched excluding tax",
          "type": "number"
        },
        "invoicedGrossSum": {
          "format": "double",
          "description": "Sum that already has been matched including tax",
          "type": "number"
        },
        "unitOfMeasure": {
          "description": "Unit of measure of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "subUnitOfMeasure": {
          "description": "Alternative unit of measurement of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptType": {
          "format": "int32",
          "description": "Custom enumeration identifying the type of the receipt",
          "type": "integer"
        },
        "receiveMethod": {
          "format": "int32",
          "description": "Custom enumeration identifying the way goods were received",
          "type": "integer"
        },
        "voucherNumber": {
          "description": "A reference to a buyer-generated document that authorizes a purchase transaction",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptNote": {
          "description": "Free-form text applying to the goods receipt. This field may contain notes or any other similar information that is not contained explicitly in another structure.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fiscalYear": {
          "format": "date-time",
          "description": "Used when goods or services are received this fiscal year and will be paid for next fiscal year",
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Date when the goods/services are delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string"
        },
        "productSerialNumber": {
          "description": "A serial number is a code to uniquely identify the received item.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text1": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text6": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text7": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text8": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text9": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text10": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "numeric2": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "numeric3": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "numeric4": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "numeric5": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number"
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document",
          "type": "string"
        }
      }
    },
    "OrderLineUserEntity": {
      "type": "object",
      "properties": {
        "userExternalCode": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "userEmail": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "userRole": {
          "enum": [
            "Buyer",
            "Owner",
            "ReferencePerson",
            "Other"
          ],
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrderResponse": {
      "required": [
        "matchingOrders"
      ],
      "type": "object",
      "properties": {
        "matchingOrders": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntity"
          }
        }
      }
    },
    "OrderEntity": {
      "required": [
        "externalCode",
        "orderNumber",
        "sourceSystem",
        "companyCode",
        "organizationElementCode",
        "currencyCode",
        "supplierCode"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Identifies the order for future updates through Basware API. Typically Generated by the system calling Basware API.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6741ecc7-848a-443c-83ad-ea95e4df06fa"
        },
        "orderNumber": {
          "description": "Order number. Identifier typically generated by the system in which the order is created.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "450004534"
        },
        "sourceSystem": {
          "description": "Identifies the source system from where the purchase order is originated",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "SAPEUR1"
        },
        "companyCode": {
          "description": "Company code. Identifier for an organization element that represents the legal structure of an organization. A purchase order company is compared with the values set in the company filter when the system identifies the correct matching configuration to be used. It is also used when searching purchase orders to be matched by the system or a user.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "1010"
        },
        "companyName": {
          "description": "Company name.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Amazing Store Central City, Phoenix, Arizona"
        },
        "organizationElementCode": {
          "description": "Identifier for an administrative organization element on top of the the company set for the purchase order. The organization element is used to identify if the user has rights to see the purchase order in Basware P2P Matching view.",
          "maxLength": 25,
          "minLength": 2,
          "type": "string",
          "example": "1000"
        },
        "organizationElementName": {
          "description": "Name of the organization element.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Amazing Store Inc."
        },
        "orderTypeCode": {
          "description": "A grouping element for purchase orders. orderTypeCode is commonly used in OM Category filters.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "NB"
        },
        "currencyCode": {
          "description": "Currency presentation of the purchase order document. Valid values are in ISO 4217 Alpha format.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "USD"
        },
        "created": {
          "format": "date-time",
          "description": "The date when the purchase order was issued. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2017-07-02T07:36:13.053Z"
        },
        "isClosed": {
          "description": "Indicates whether the purchase order is closed. If TRUE, a purchase order has been marked as closed. All purchase order lines also get closed.",
          "type": "boolean",
          "example": "False"
        },
        "description": {
          "description": "Description of purcahse order.",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "Economy letters - 500"
        },
        "purchaseOrganizationCode": {
          "description": "Party that is the accountable buyer of the goods/services in the referred business document. The purchaseOrganizationCode does not have an impact to the matching process.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "1017"
        },
        "purchaseOrganizationName": {
          "description": "Name of the purchase organization unit",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Marketing"
        },
        "supplierCode": {
          "description": "Supplier code to which the order is placed. The supplier of the goods/services in the referred business document.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "114612065012"
        },
        "supplierName": {
          "description": "Name of the supplier.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Acme Supplier Inc."
        },
        "invoicingSupplierCode": {
          "description": "Supplier code of supplier sending the invoice. In some cases may be different from the main supplierCode.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "540077"
        },
        "invoicingSupplierName": {
          "description": "Name of supplier sending the invoice.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Office Warehouse Inc."
        },
        "requestedDeliveryDate": {
          "format": "date-time",
          "description": "Date when goods/services are expected to be delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "actualDeliveryDate": {
          "format": "date-time",
          "description": "Date when goods/services were delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order starts. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-01-01T07:36:13.053Z"
        },
        "validTo": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order ends. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-12-31T07:36:13.053Z"
        },
        "paymentTermCode": {
          "description": "Identifier for the agreed payment term that is to be used when supplier charges the customer. The field does not have an impact to the matching process.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentTermName": {
          "description": "Name of the payment term",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "30 days end of month"
        },
        "text1": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text2": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text3": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text4": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text5": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text6": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text7": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text8": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text9": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text10": {
          "description": "Custom field in the business document",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric2": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric3": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric4": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "numeric5": {
          "format": "double",
          "description": "Custom field in the business document",
          "type": "number",
          "example": 0
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "isInvoiced": {
          "description": "Indicates whether the purchase order is invoiced. If TRUE, a purchase order has been marked as fully invoiced. By default, the field does not have an impact to the matching process.",
          "type": "boolean",
          "example": "False"
        },
        "isDelivered": {
          "description": "Indicates whether the purchase order is delivered. If TRUE, a purchase order has been marked as fully invoiced. By default, the field does not have an impact to the matching process.",
          "type": "boolean",
          "example": "False"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PaymentTermResponse": {
      "required": [
        "paymentTerms"
      ],
      "type": "object",
      "properties": {
        "paymentTerms": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTermEntity"
          }
        }
      }
    },
    "PaymentTermEntity": {
      "required": [
        "paymentTermCode",
        "paymentTermNames",
        "validFrom",
        "validTo",
        "companies",
        "paymentTermDiscountRules",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "paymentTermCode": {
          "description": "Specifies a code for the payment term.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "NT60"
        },
        "paymentTermNames": {
          "description": "Defines name(s) for the payment term. Please always include 'en-US' language tag for Basware global support, as well as any local-language tag being used. If both translations are not available, please use the same string with both language tags.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "sortOrder": {
          "format": "int32",
          "description": "The value specifies the position of a payment term in selection list.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "8"
        },
        "moveDueDatesTo": {
          "description": "Gets or Sets MoveDueDatesTo",
          "pattern": "0|1|2",
          "type": "string",
          "example": 0
        },
        "dueDateCalc": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_CALC is the date when an invoice payment is due to the buyer.",
          "pattern": "0|1",
          "type": "integer",
          "example": "1"
        },
        "dueDateDays": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_DAYS defines the number of days to be added to the base date.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "60"
        },
        "dueDateDays2": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_DAYS2 defines the number of days to be added to the due date resulting from DUE_DATE_DAYS.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": 0
        },
        "dueDateEom": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_EOM (end of month) defines the number of month ending moves:0 = no move ,1 = The due date will be moved to the last day of the base date's month. 2 = The due date will be moved to the following month's last day.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": 0
        },
        "cashDueDateCalc": {
          "format": "int32",
          "description": "Cash due date calculation is done for cash date. CASH_DISCOUNT defines a discount percentage. CASH_DUE_DATE_CALC is the date when an invoice payment is due to the buyer.",
          "pattern": "0|1|2",
          "type": "integer",
          "example": "2"
        },
        "cashDueDateDays": {
          "format": "int32",
          "description": "Cash due date calculation is done for cash date. CASH_DISCOUNT defines a discount percentage. CASH_DUE_DATE_DAYS defines the number of days to be added to the cash date.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": 0
        },
        "cashDueDateDays2": {
          "format": "int32",
          "description": "Cash due date calculation is done for cash date. CASH_DISCOUNT defines a discount percentage. CASH_DUE_DATE_DAYS2 defines the number of days to be added to the due date resulting from CASH_DUE_DATE_DAYS.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": 0
        },
        "cashDueDateEom": {
          "format": "int32",
          "description": "CASH_DUE_DATE_EOM (end of month) defines the number of month ending moves: 0 = no move, 1 = The due date will be moved to the last day of the cash date's month., 2 = The due date will be moved to the following month's last day.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": 0
        },
        "cashDiscount": {
          "format": "double",
          "description": "Defines the discount percentage.00000000",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number",
          "example": "0.00000000"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Defines the date when the payment term's validity period starts.",
          "type": "string",
          "example": "2015-01-01"
        },
        "validTo": {
          "format": "date-time",
          "description": "Defines the date when the payment term's validity period ends.",
          "type": "string",
          "example": "2016-01-02"
        },
        "companies": {
          "description": "List of company units to associate paymentterm to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTermCompanyEntity"
          }
        },
        "paymentTermDiscountRules": {
          "description": "Gets or Sets PaymentTermDiscountRules",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTermDiscountRule"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "PaymentTermCompanyEntity": {
      "required": [
        "companyCode",
        "inherit",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "The payment term for different suppliers is attached to this company code.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "inherit": {
          "description": "The value defines whether the payment is inherited to lower organization units in the organization structure.",
          "type": "boolean",
          "example": false
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "PaymentTermDiscountRule": {
      "required": [
        "externalCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "External code is a unique code for the payment term's discount rules.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "discountDays": {
          "format": "int32",
          "description": "Defines number of days used in dynamic cash discount. The number of days must be unique for each discount percentage.",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "discountPercent": {
          "format": "double",
          "description": "Defines the discount percentage that the supplier offers for the buyer for early cash payments",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean"
        }
      }
    },
    "ProjectResponse": {
      "required": [
        "projects"
      ],
      "type": "object",
      "properties": {
        "projects": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectEntity"
          }
        }
      }
    },
    "ProjectEntity": {
      "required": [
        "projectCode",
        "projectNames",
        "validFrom",
        "validUntil",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "projectCode": {
          "description": "Defines a code for the project that is mapped with the organization. The code is used when creating purchase requisitions, purchase orders, and invoice coding.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "677020A"
        },
        "projectNames": {
          "description": "Defines name(s) for the project. Please always include 'en-US' language tag for Basware global support, as well as any local-language tag being used. If both translations are not available, please use the same string with both language tags.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "description": {
          "description": "Defines a project description that is shown when a user selects the project",
          "maxLength": 500,
          "minLength": 0,
          "type": "string",
          "example": "Test Project 1"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Specifies the date when the project validity starts",
          "type": "string",
          "example": "2017-01-01"
        },
        "validUntil": {
          "format": "date-time",
          "description": "Specifies the date when the project validity ends",
          "type": "string",
          "example": "2018-01-01"
        },
        "companies": {
          "description": "List of company units to associate project to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "ProjectCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines the company code that the project is mapped to. You can map many projects to one company.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "TaxCodeResponse": {
      "type": "object",
      "properties": {
        "taxCodes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeEntity"
          }
        }
      }
    },
    "TaxCodeEntity": {
      "required": [
        "taxCode",
        "taxCodeNames",
        "taxPercentage",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "taxCode": {
          "description": "Tax code.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "B9"
        },
        "taxCodeNames": {
          "description": "Defines name(s) for the tax code. Please always include 'en-US' language tag for Basware global support, as well as any local-language tag being used. If both translations are not available, please use the same string with both language tags.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "taxPercentage": {
          "format": "double",
          "description": "Specifies the tax percentage. The value must be 0-100.",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number",
          "example": "10.0000000"
        },
        "taxPercentage2": {
          "format": "double",
          "description": "Tax percentage 2 (may be used for example for partially deductible VAT)",
          "type": "number",
          "example": "0.0000000"
        },
        "additionalData": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeAdditionalData"
          }
        },
        "companies": {
          "description": "List of company units to associate taxcodes to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "TaxCodeAdditionalData": {
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string",
          "example": "c9921a52-6d8b-1017-cb8c-923d"
        },
        "account": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "statistical": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "transactionType": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "country": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "condition": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "TaxCodeCompanyEntity": {
      "required": [
        "companyCode",
        "inherit",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that the tax code is mapped to",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "inherit": {
          "description": "The value specifies whether the property is inherited to lower organizations.",
          "type": "boolean",
          "example": false
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": true
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserEntity"
          }
        }
      }
    },
    "UserEntity": {
      "required": [
        "firstName",
        "surName",
        "loginAccount",
        "email",
        "groups",
        "companyCode",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Specifies the user's first name",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "John"
        },
        "surName": {
          "description": "Specifies the user's last name",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "Smith"
        },
        "uiLanguage": {
          "description": "Language code. Specifies the language in which the user uses the system. The languages, for example English or Finnish, are available in the language picker.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "en-US"
        },
        "countryCode": {
          "description": "Gets or Sets CountryCode. Not used in P2P Alusta.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "telephone": {
          "description": "Specifies the user's telephone number.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "501234567"
        },
        "loginAccount": {
          "description": "Unique user id. A new user id means a new user, using existing user id will update existing user data. Without Basware Access, this is also user\u2019s login account.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "BASWARE\\JOHNSMITH"
        },
        "password": {
          "description": "Users password. Not used in P2P Alusta.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "middleInitial": {
          "description": "Specifies the user's middle name's initial letter",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "S"
        },
        "email": {
          "description": "Specifies the user\u2019s email address. With Basware Access this is user\u2019s login account.",
          "maxLength": 320,
          "minLength": 3,
          "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
          "type": "string",
          "example": "john.smith@company.com"
        },
        "costCenterCode": {
          "description": "Gets or Sets CostCenterCode",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "1000"
        },
        "validFrom": {
          "format": "date-time",
          "description": "The user is active and can use the system starting from this date.",
          "type": "string",
          "example": "2017-01-01"
        },
        "validUntil": {
          "format": "date-time",
          "description": "On this date, the user is deactivated and can no longer use the system.",
          "type": "string",
          "example": "2018-01-02"
        },
        "supervisorLoginAccount": {
          "description": "Unique user id of the user\u2019s supervisor.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "BASWARE\\JOEGREEN"
        },
        "personCode": {
          "description": "Defines the user\u2019s person code that is mapped with the user\u2019s employee ID.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "1002"
        },
        "title": {
          "description": "Specifies the user's title",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Solid line manager"
        },
        "loginType": {
          "description": "There can be three types of login: \r\nSingle service username and password login (0): Entry level option for cases when only one Basware service is in use. User is created to the Basware service user repository and authentication is with username and password. If more than one Basware service is in use this may cause situation where same user has different passwords for different Basware services and needs to authenticate separately to each service. Passwords are delivered via separate emails.\r\nSingle service SSO login (2): Single Sign On integrated solution for cases when only one Basware service is in use. Also used for Purchase Manager and Invoice Automation point to point authentication integration if other Basware services are not in use. Not applicable with some Basware Services (username and separate password is used in those services instead).\r\nBasware Access login (4): Authentication for cases when all Basware services are in use or when Single Sign On integration is required and not otherwise supported. Supports both username and password authentication and SSO integrations. Requires provisioning Basware Access service into use.",
          "pattern": "0|2|4|99|",
          "type": "string",
          "example": "99"
        },
        "approvalPasswordUseAllowed": {
          "description": "This value defines whether the system generates an approval password for the user to be used when approving purchase requisitions, purchase orders, and invoices.",
          "type": "string",
          "example": 0
        },
        "collaborationSendType": {
          "description": "Defines how notifications are sent for discussions and announcements. The options are: No notifications,For each new message,Daily summary",
          "pattern": "0|1|2|",
          "type": "string",
          "example": "1"
        },
        "messageSendType": {
          "description": "Defines how notifications are sent for tasks. The options are: No notifications, For each new task,Daily summary",
          "pattern": "0|1|2|",
          "type": "string",
          "example": "1"
        },
        "groups": {
          "description": "User groups in P2P.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "spendingLimits": {
          "description": "Spending limits in Purchase Manager. Not used in P2P Alusta.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpendingLimits"
          }
        },
        "purchaseManagerUserLocations": {
          "$ref": "#/definitions/PurchaseManagerUserLocations",
          "description": "User default locations in Purchase Manager. Not used in P2P Alusta."
        },
        "purchaseManagerModuleAccess": {
          "$ref": "#/definitions/PurchaseManagerModuleAccess",
          "description": "Module access in Purchase Manager. Not used in P2P Alusta."
        },
        "purchasingGroups": {
          "description": "Array of Group Names that user should belong to for purchasing functions in the system",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasingGroups"
          }
        },
        "accessRealms": {
          "description": "A list of realms to be granted for the user instead of the default realm.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "accessLoginMethod": {
          "description": "A specific login method for the user instead of the default.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "accessTimeout": {
          "format": "int32",
          "description": "User specific timeout in seconds to use instead of the login method default.",
          "maximum": 28800.0,
          "minimum": 900.0,
          "type": "integer"
        },
        "companyCode": {
          "description": "The company code specifies the user's home organization element.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "loginAllowed": {
          "description": "This value defines whether the user can access the system after the user details are saved.",
          "type": "boolean",
          "example": 0
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "UserGroup": {
      "required": [
        "externalGroupCode"
      ],
      "type": "object",
      "properties": {
        "externalGroupCode": {
          "description": "Gets or Sets external group code",
          "maxLength": 32,
          "minLength": 1,
          "type": "string",
          "example": "c9921a52-6d8b-1017-cb8c-923d"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.",
          "type": "boolean",
          "example": "1"
        }
      }
    },
    "SpendingLimits": {
      "required": [
        "category",
        "limit"
      ],
      "type": "object",
      "properties": {
        "category": {
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "limit": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PurchaseManagerUserLocations": {
      "type": "object",
      "properties": {
        "shipToCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "shipToName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "billToCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "billToName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "chargeToCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "chargeToName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PurchaseManagerModuleAccess": {
      "type": "object",
      "properties": {
        "purchasing": {
          "description": "Whether user has access to Purchase Manager module or not.",
          "type": "boolean",
          "example": "True"
        },
        "travel": {
          "description": "Whether user has access to Travel &amp; Expense module or not.",
          "type": "boolean",
          "example": "False"
        },
        "spendManager": {
          "description": "Whether user has access to Spend Manager module or not.",
          "type": "boolean",
          "example": "False"
        },
        "assets": {
          "description": "Whether user has access to Asset Manager module or not.",
          "type": "boolean",
          "example": "False"
        },
        "budgets": {
          "description": "Whether user has access to Budget Manager module or not.",
          "type": "boolean",
          "example": "False"
        }
      }
    },
    "PurchasingGroups": {
      "type": "object",
      "properties": {
        "groupName": {
          "description": "Gets or Sets Group Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "companyCode": {
          "description": "The company code specifies the purchasing groups organization element.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        }
      }
    }
  }
}