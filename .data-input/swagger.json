{
  "swagger": "2.0",
  "info": {
    "version": "v1",
    "title": "Alusta OpenApi"
  },
  "basePath": "",
  "paths": {
    "/v1/accountingDocuments": {
      "get": {
        "tags": [
          "AccountingDocuments"
        ],
        "summary": "Returns accounting documents from the system",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "ProcessingStatus",
            "in": "query",
            "description": "Document status filter. Returns items by accounting document status.",
            "required": false,
            "type": "string",
            "enum": [
              "WaitingForPrebook",
              "PrebookInProgress",
              "Prebooked",
              "PrebookFailed",
              "WaitingForTransfer",
              "TransferInProgress",
              "Transferred",
              "TransferFailed",
              "WaitingForPrebookCancelation",
              "PrebookCancelationInProgress",
              "PrebookCanceled",
              "PrebookCancelFailed",
              "WaitingToBeRemoved",
              "RemoveInProgress",
              "Removed",
              "RemoveFailed",
              "WaitingToBeReturned",
              "ReturnInProgress",
              "Returned",
              "ReturnFailed",
              "WaitingToBeCompleted",
              "CompletionInProgress",
              "Completed",
              "CompletionFailed",
              "Paid"
            ]
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingDocumentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/accountingDocuments/{InvoiceId}": {
      "get": {
        "tags": [
          "AccountingDocuments"
        ],
        "summary": "Returns single accounting document by document number. Document number identifier is generated in P2P",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "InvoiceId",
            "in": "path",
            "description": "The document number of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountingDocumentResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/accountingDocuments/{invoiceId}/transferResponses": {
      "post": {
        "tags": [
          "AccountingDocuments"
        ],
        "summary": "Marks invoice as transfered. Possibility to provide transfer response.",
        "operationId": "TransferInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "transferResponse",
            "in": "body",
            "description": "Transfer response to be added to accountingDocument",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TransferResponseEntity"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Document number of the accountingDocument to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Entity to be updated",
            "schema": {
              "$ref": "#/definitions/TransferResponseEntity"
            }
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/accountingDocuments/{invoiceId}/acknowledge": {
      "post": {
        "tags": [
          "AccountingDocuments"
        ],
        "summary": "Acknowledge invoice and move to \"inProcess\" status",
        "operationId": "Acknowledge",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Document number of the accountingDocument to be acknowledged",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/accountingDocuments/{invoiceId}/prebookResponses": {
      "post": {
        "tags": [
          "AccountingDocuments"
        ],
        "summary": "Marks invoice as prebooked. Possibility to provide prebook response.",
        "operationId": "PrebookInvoice",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "prebookResponse",
            "in": "body",
            "description": "Prebook responses to be added to accountingDocument",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PrebookResponseEntity"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Document number of the accountingDocument to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PrebookResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/v1/accountingDocuments/{invoiceId}/paymentResponses": {
      "post": {
        "tags": [
          "AccountingDocuments"
        ],
        "summary": "Marks invoice as paid. Possibility to provide payment response.",
        "operationId": "UpdatePaymentInfo",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "paymentResponse",
            "in": "body",
            "description": "Payment response to be added to accountingDocument",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PaymentResponseEntity"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "description": "Document number of the accountingDocument to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaymentResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/v1/accounts": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Returns account entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Creates new account entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "accounts",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/accounts/{externalCode}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Returns single account by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Updates account entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the account to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "account",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AccountEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AccountEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/advancedPermissions": {
      "get": {
        "tags": [
          "AdvancedPermissions"
        ],
        "summary": "Returns advanced permissions entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvancedPermissionResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdvancedPermissions"
        ],
        "summary": "Creates new AdvancedPermissions entity, overwrites previous if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "advancedPermissions",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedPermissionEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedPermissionEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/advancedPermissions/{externalCode}": {
      "get": {
        "tags": [
          "AdvancedPermissions"
        ],
        "summary": "Returns single advanced permission by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvancedPermissionEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AdvancedPermissions"
        ],
        "summary": "Updates AdvancedPermissions entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the AdvancedPermission to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "advancedPermission",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AdvancedPermissionEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvancedPermissionEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/advancedValidations": {
      "get": {
        "tags": [
          "AdvancedValidations"
        ],
        "summary": "Returns advancedValidation entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvancedValidationResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "AdvancedValidations"
        ],
        "summary": "Creates new advancedValidation entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "advancedValidations",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedValidationEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdvancedValidationEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/advancedValidations/{externalCode}": {
      "get": {
        "tags": [
          "AdvancedValidations"
        ],
        "summary": "Returns single advancedValidation by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvancedValidationEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AdvancedValidations"
        ],
        "summary": "Updates advancedValidation entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the advancedValidation to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "advancedValidation",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/AdvancedValidationEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AdvancedValidationEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/costCenters": {
      "get": {
        "tags": [
          "CostCenters"
        ],
        "summary": "Returns cost center entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CostCenterResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "CostCenters"
        ],
        "summary": "Creates new CostCenter entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "costCenters",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCenterEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/CostCenterEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/costCenters/{externalCode}": {
      "get": {
        "tags": [
          "CostCenters"
        ],
        "summary": "Returns single cost center entity by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CostCenterEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "CostCenters"
        ],
        "summary": "Updates  CostCenter entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the CostCenter to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "costCenter",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CostCenterEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CostCenterEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/errorFeedbacks": {
      "get": {
        "tags": [
          "ErrorFeedbacks"
        ],
        "summary": "Returns error feedback entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "targetSystem",
            "in": "query",
            "description": "It means the Basware application module which has posted error",
            "required": false,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "query",
            "description": "The EntityType of the entities to be fetched",
            "required": false,
            "type": "string",
            "enum": [
              "Account",
              "Contract",
              "CostCenter",
              "TaxCode",
              "ExchangeRate",
              "PaymentTerm",
              "Budget",
              "User",
              "Project",
              "MatchingOrder",
              "MatchingOrderLine",
              "AccountingDocument",
              "GenericList",
              "MatchingGoodsReceipt",
              "AdvancedPermission",
              "TransferResponse",
              "PaymentResponse",
              "PrebookResponse",
              "Vendor",
              "AdvancedValidation"
            ]
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorFeedbackResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/errorFeedbacks/{requestId}": {
      "get": {
        "tags": [
          "ErrorFeedbacks"
        ],
        "summary": "Returns error feedback entity based on requestId",
        "description": "",
        "operationId": "GetByRequestId",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "description": "The RequestId of the entity to be fetched",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorFeedbackResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/errorFeedbacks/{entityType}/{errorEntityExternalCode}": {
      "get": {
        "tags": [
          "ErrorFeedbacks"
        ],
        "summary": "Returns error feedback entity based on requestId",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "The entityType of the entities to be fetched",
            "required": true,
            "type": "string",
            "enum": [
              "Account",
              "Contract",
              "CostCenter",
              "TaxCode",
              "ExchangeRate",
              "PaymentTerm",
              "Budget",
              "User",
              "Project",
              "MatchingOrder",
              "MatchingOrderLine",
              "AccountingDocument",
              "GenericList",
              "MatchingGoodsReceipt",
              "AdvancedPermission",
              "TransferResponse",
              "PaymentResponse",
              "PrebookResponse",
              "Vendor",
              "AdvancedValidation"
            ]
          },
          {
            "name": "errorEntityExternalCode",
            "in": "path",
            "description": "The ExternalCode of the entities to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorFeedbackResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/exchangeRates": {
      "get": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Returns exchange rate entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExchangeRateResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Creates new exchangeRate entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "exchangeRates",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExchangeRateEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExchangeRateEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/exchangeRates/{externalCode}": {
      "get": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Returns single exchange rate entity by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExchangeRateEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "ExchangeRates"
        ],
        "summary": "Updates  exchangeRate entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the exchangeRate to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "exchangeRate",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ExchangeRateEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ExchangeRateEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/lists/{listKey}": {
      "get": {
        "tags": [
          "GenericLists"
        ],
        "summary": "Returns list entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "listKey",
            "in": "path",
            "description": "ListKey defines the target table in Alusta. e.g. List with listKey 'ACC_LIST_5' will be mapped to EXT_ACC_LIST_5.",
            "required": true,
            "type": "string",
            "enum": [
              "ACC_LIST_1",
              "ACC_LIST_2",
              "ACC_LIST_3",
              "ACC_LIST_4",
              "ACC_LIST_5",
              "ACC_LIST_6",
              "ACC_LIST_7",
              "ACC_LIST_8",
              "ACC_LIST_9",
              "ACC_LIST_10",
              "ACC_LIST_11",
              "ACC_LIST_12",
              "ACC_LIST_13",
              "ACC_LIST_14",
              "ACC_LIST_15",
              "ACC_LIST_16",
              "ACC_LIST_17",
              "ACC_LIST_18",
              "ACC_LIST_19",
              "ACC_LIST_20",
              "ACC_LIST_21",
              "ACC_LIST_22",
              "ACC_LIST_23",
              "ACC_LIST_24",
              "ACC_LIST_25",
              "ACC_LIST_26",
              "ACC_LIST_27",
              "ACC_LIST_28",
              "ACC_LIST_29",
              "ACC_LIST_30",
              "ACC_LIST_31",
              "ACC_LIST_32",
              "ACC_LIST_33",
              "ACC_LIST_34",
              "ACC_LIST_35",
              "CUST_RESOLVER_1",
              "CUST_RESOLVER_2",
              "CUST_RESOLVER_3",
              "CUST_RESOLVER_4",
              "CUST_RESOLVER_5",
              "INV_LIST_1",
              "INV_LIST_2",
              "INV_LIST_3",
              "INV_LIST_4",
              "INV_LIST_5",
              "INV_LIST_6",
              "INV_LIST_7",
              "INV_LIST_8",
              "INV_LIST_9",
              "INV_LIST_10",
              "INV_LIST_11",
              "INV_LIST_12",
              "INV_LIST_13",
              "INV_LIST_14",
              "INV_LIST_15",
              "INV_LIST_16",
              "INV_LIST_17",
              "INV_LIST_18",
              "INV_LIST_19",
              "INV_LIST_20"
            ]
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenericListResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "GenericLists"
        ],
        "summary": "Creates new list item, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "listKey",
            "in": "path",
            "description": "ListKey defines the target table in Alusta. e.g. List with listKey 'ACC_LIST_5' will be mapped to EXT_ACC_LIST_5.",
            "required": true,
            "type": "string",
            "enum": [
              "ACC_LIST_1",
              "ACC_LIST_2",
              "ACC_LIST_3",
              "ACC_LIST_4",
              "ACC_LIST_5",
              "ACC_LIST_6",
              "ACC_LIST_7",
              "ACC_LIST_8",
              "ACC_LIST_9",
              "ACC_LIST_10",
              "ACC_LIST_11",
              "ACC_LIST_12",
              "ACC_LIST_13",
              "ACC_LIST_14",
              "ACC_LIST_15",
              "ACC_LIST_16",
              "ACC_LIST_17",
              "ACC_LIST_18",
              "ACC_LIST_19",
              "ACC_LIST_20",
              "ACC_LIST_21",
              "ACC_LIST_22",
              "ACC_LIST_23",
              "ACC_LIST_24",
              "ACC_LIST_25",
              "ACC_LIST_26",
              "ACC_LIST_27",
              "ACC_LIST_28",
              "ACC_LIST_29",
              "ACC_LIST_30",
              "ACC_LIST_31",
              "ACC_LIST_32",
              "ACC_LIST_33",
              "ACC_LIST_34",
              "ACC_LIST_35",
              "CUST_RESOLVER_1",
              "CUST_RESOLVER_2",
              "CUST_RESOLVER_3",
              "CUST_RESOLVER_4",
              "CUST_RESOLVER_5",
              "INV_LIST_1",
              "INV_LIST_2",
              "INV_LIST_3",
              "INV_LIST_4",
              "INV_LIST_5",
              "INV_LIST_6",
              "INV_LIST_7",
              "INV_LIST_8",
              "INV_LIST_9",
              "INV_LIST_10",
              "INV_LIST_11",
              "INV_LIST_12",
              "INV_LIST_13",
              "INV_LIST_14",
              "INV_LIST_15",
              "INV_LIST_16",
              "INV_LIST_17",
              "INV_LIST_18",
              "INV_LIST_19",
              "INV_LIST_20"
            ]
          },
          {
            "name": "listItems",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericListEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/GenericListEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/lists/{listKey}/{externalCode}": {
      "get": {
        "tags": [
          "GenericLists"
        ],
        "summary": "Returns single list item by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "listKey",
            "in": "path",
            "description": "ListKey defines the target table in Alusta. e.g. List with listKey 'ACC_LIST_5' will be mapped to EXT_ACC_LIST_5.",
            "required": true,
            "type": "string",
            "enum": [
              "ACC_LIST_1",
              "ACC_LIST_2",
              "ACC_LIST_3",
              "ACC_LIST_4",
              "ACC_LIST_5",
              "ACC_LIST_6",
              "ACC_LIST_7",
              "ACC_LIST_8",
              "ACC_LIST_9",
              "ACC_LIST_10",
              "ACC_LIST_11",
              "ACC_LIST_12",
              "ACC_LIST_13",
              "ACC_LIST_14",
              "ACC_LIST_15",
              "ACC_LIST_16",
              "ACC_LIST_17",
              "ACC_LIST_18",
              "ACC_LIST_19",
              "ACC_LIST_20",
              "ACC_LIST_21",
              "ACC_LIST_22",
              "ACC_LIST_23",
              "ACC_LIST_24",
              "ACC_LIST_25",
              "ACC_LIST_26",
              "ACC_LIST_27",
              "ACC_LIST_28",
              "ACC_LIST_29",
              "ACC_LIST_30",
              "ACC_LIST_31",
              "ACC_LIST_32",
              "ACC_LIST_33",
              "ACC_LIST_34",
              "ACC_LIST_35",
              "CUST_RESOLVER_1",
              "CUST_RESOLVER_2",
              "CUST_RESOLVER_3",
              "CUST_RESOLVER_4",
              "CUST_RESOLVER_5",
              "INV_LIST_1",
              "INV_LIST_2",
              "INV_LIST_3",
              "INV_LIST_4",
              "INV_LIST_5",
              "INV_LIST_6",
              "INV_LIST_7",
              "INV_LIST_8",
              "INV_LIST_9",
              "INV_LIST_10",
              "INV_LIST_11",
              "INV_LIST_12",
              "INV_LIST_13",
              "INV_LIST_14",
              "INV_LIST_15",
              "INV_LIST_16",
              "INV_LIST_17",
              "INV_LIST_18",
              "INV_LIST_19",
              "INV_LIST_20"
            ]
          },
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the list item",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenericListEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "GenericLists"
        ],
        "summary": "Updates  list entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "listKey",
            "in": "path",
            "description": "ListKey defines the target table in Alusta. e.g. List with listKey 'ACC_LIST_5' will be mapped to EXT_ACC_LIST_5.",
            "required": true,
            "type": "string",
            "enum": [
              "ACC_LIST_1",
              "ACC_LIST_2",
              "ACC_LIST_3",
              "ACC_LIST_4",
              "ACC_LIST_5",
              "ACC_LIST_6",
              "ACC_LIST_7",
              "ACC_LIST_8",
              "ACC_LIST_9",
              "ACC_LIST_10",
              "ACC_LIST_11",
              "ACC_LIST_12",
              "ACC_LIST_13",
              "ACC_LIST_14",
              "ACC_LIST_15",
              "ACC_LIST_16",
              "ACC_LIST_17",
              "ACC_LIST_18",
              "ACC_LIST_19",
              "ACC_LIST_20",
              "ACC_LIST_21",
              "ACC_LIST_22",
              "ACC_LIST_23",
              "ACC_LIST_24",
              "ACC_LIST_25",
              "ACC_LIST_26",
              "ACC_LIST_27",
              "ACC_LIST_28",
              "ACC_LIST_29",
              "ACC_LIST_30",
              "ACC_LIST_31",
              "ACC_LIST_32",
              "ACC_LIST_33",
              "ACC_LIST_34",
              "ACC_LIST_35",
              "CUST_RESOLVER_1",
              "CUST_RESOLVER_2",
              "CUST_RESOLVER_3",
              "CUST_RESOLVER_4",
              "CUST_RESOLVER_5",
              "INV_LIST_1",
              "INV_LIST_2",
              "INV_LIST_3",
              "INV_LIST_4",
              "INV_LIST_5",
              "INV_LIST_6",
              "INV_LIST_7",
              "INV_LIST_8",
              "INV_LIST_9",
              "INV_LIST_10",
              "INV_LIST_11",
              "INV_LIST_12",
              "INV_LIST_13",
              "INV_LIST_14",
              "INV_LIST_15",
              "INV_LIST_16",
              "INV_LIST_17",
              "INV_LIST_18",
              "INV_LIST_19",
              "INV_LIST_20"
            ]
          },
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the genericList to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "listItem",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/GenericListEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/GenericListEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/matchingOrderLines": {
      "get": {
        "tags": [
          "MatchingOrderLines"
        ],
        "summary": "Returns orderline entities for a single order",
        "description": "",
        "operationId": "GetAllLinesForOrder",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "orderExternalCode",
            "in": "query",
            "description": "The externalCode of the order.",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderLineResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MatchingOrderLines"
        ],
        "summary": "Creates new orderLine entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "matchingOrderLines",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderLineEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderLineEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/matchingOrderLines/{externalCode}": {
      "get": {
        "tags": [
          "MatchingOrderLines"
        ],
        "summary": "Returns single orderLine by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderLineEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MatchingOrderLines"
        ],
        "summary": "Updates orderLine entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the orderLine to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "matchingOrderLine",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderLineEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderLineEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/matchingOrders": {
      "get": {
        "tags": [
          "MatchingOrders"
        ],
        "summary": "Returns order entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "orderStatus",
            "in": "query",
            "description": "Order status filter. Returns items for specific status.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "MatchingOrders"
        ],
        "summary": "Creates new order entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "matchingOrders",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/OrderEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/matchingOrders/{externalCode}": {
      "get": {
        "tags": [
          "MatchingOrders"
        ],
        "summary": "Returns single order entity by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "MatchingOrders"
        ],
        "summary": "Updates  order entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the order to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "matchingOrder",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/OrderEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OrderEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/paymentTerms": {
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Returns payment term entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaymentTermResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Creates new paymentTerm entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "paymentTerms",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentTermEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/PaymentTermEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/paymentTerms/{externalCode}": {
      "get": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Returns single payment term by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaymentTermEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "PaymentTerms"
        ],
        "summary": "Updates  paymentTerm entity",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the paymentTerm to be updated. To do a partial update consumer needs to provide changed properties.",
            "required": true,
            "type": "string"
          },
          {
            "name": "paymentTerm",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/PaymentTermEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PaymentTermEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/projects": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns project entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Projects"
        ],
        "summary": "Creates new project entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "projects",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/projects/{externalCode}": {
      "get": {
        "tags": [
          "Projects"
        ],
        "summary": "Returns single project entity by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Projects"
        ],
        "summary": "Updates  project entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the project to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "project",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/ProjectEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/taxCodes": {
      "get": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Returns tax code entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TaxCodeResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Creates new taxCodes entity, overwrites previous if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "taxCodes",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCodeEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/TaxCodeEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/taxCodes/{externalCode}": {
      "get": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Returns single tax code entity by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TaxCodeEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "TaxCodes"
        ],
        "summary": "Updates  taxCodes entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the taxCodes to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "taxCode",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/TaxCodeEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TaxCodeEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns user entities",
        "description": "",
        "operationId": "GetAll",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "description": "A limit for the number of items to be returned for one request. Limit can range between 1 and 500 items",
            "required": false,
            "type": "integer",
            "format": "int32",
            "default": 500
          },
          {
            "name": "companyCode",
            "in": "query",
            "description": "Company filter. Returns items for specific company.",
            "required": false,
            "type": "string",
            "default": ""
          },
          {
            "name": "lastUpdated",
            "in": "query",
            "description": "Date Filter. Returns items that have been updated after specified date.",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "continuationToken",
            "in": "header",
            "description": "UUID value that needs to be included in request to receive the next page of results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Creates new User entity, overwrites previous if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "users",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/users/{externalCode}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Returns single user by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Updates  User entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the User to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/vendors/{externalCode}": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Returns single vendor by ID",
        "description": "",
        "operationId": "GetById",
        "consumes": [],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the entity to be fetched",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VendorEntity"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Vendors"
        ],
        "summary": "Updates vendor entity. To do a partial update consumer needs to provide changed properties.",
        "operationId": "Patch",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "externalCode",
            "in": "path",
            "description": "The ExternalCode of the vendor to be updated",
            "required": true,
            "type": "string"
          },
          {
            "name": "vendor",
            "in": "body",
            "description": "Entity to be updated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/VendorEntity"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/VendorEntity"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    },
    "/v1/vendors": {
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Creates new vendor entity, overwrites previous entity if exists.",
        "operationId": "Post",
        "consumes": [
          "application/json-patch+json",
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "vendors",
            "in": "body",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorEntity"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "description": "Specifies the media type of the resource. Value application/json is supported.",
            "required": false,
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": {
                "$ref": "#/definitions/VendorEntity"
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          },
          "500": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ResponseEntityList"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AccountingDocumentResponse": {
      "required": [
        "accountingDocuments"
      ],
      "type": "object",
      "properties": {
        "accountingDocuments": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountingDocumentEntity"
          }
        }
      }
    },
    "AccountingDocumentEntity": {
      "required": [
        "invoiceId",
        "processingStatus",
        "companyCode",
        "supplierCode",
        "currencyCode",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "invoiceId": {
          "description": "This represents Basware P2P unique identifier for an invoice.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "bumid": {
          "description": "Business document identifier between Basware P2P and other systems.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "invoiceNumber": {
          "description": "Identifier for an invoice provided by the supplier.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "voucherNumber1": {
          "description": "Unique identifier generated by Basware P2P at the time of the first transfer request to Basware API",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherNumber2": {
          "description": "Unique identifier generated by Basware P2P at the time of the first transfer request to Basware API.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherDate": {
          "format": "date-time",
          "type": "string"
        },
        "processingStatus": {
          "description": "The Processing status of the accounting document.",
          "enum": [
            "WaitingForPrebook",
            "PrebookInProgress",
            "Prebooked",
            "PrebookFailed",
            "WaitingForTransfer",
            "TransferInProgress",
            "Transferred",
            "TransferFailed",
            "WaitingForPrebookCancelation",
            "PrebookCancelationInProgress",
            "PrebookCanceled",
            "PrebookCancelFailed",
            "WaitingToBeRemoved",
            "RemoveInProgress",
            "Removed",
            "RemoveFailed",
            "WaitingToBeReturned",
            "ReturnInProgress",
            "Returned",
            "ReturnFailed",
            "WaitingToBeCompleted",
            "CompletionInProgress",
            "Completed",
            "CompletionFailed",
            "Paid"
          ],
          "type": "string"
        },
        "companyCode": {
          "description": "The legal structure of an organization where the spend from the invoice is recorded.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "companyName": {
          "description": "Explanation of the code defined in companyCode.",
          "maxLength": 250,
          "minLength": 2,
          "type": "string"
        },
        "organizationCode": {
          "description": "Organization element in the higher level of the organization than companyCode. This organization element collects the spend from the lower organization units.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "organizationName": {
          "description": "Explanation of the code defined in organizationCode.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "supplierCode": {
          "description": "A party that supplied goods or services referred in the invoice.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "supplierName": {
          "description": "Explanation of the code defined in supplierCode.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "currencyCode": {
          "description": "Invoice currency",
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "netSum": {
          "format": "double",
          "description": "Total without tax",
          "type": "number"
        },
        "grossSum": {
          "format": "double",
          "description": "Total with tax",
          "type": "number"
        },
        "taxCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent1": {
          "format": "double",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "taxPercent2": {
          "format": "double",
          "type": "number"
        },
        "taxSum1": {
          "format": "double",
          "description": "Tax sum to be paid",
          "type": "number"
        },
        "taxSum2": {
          "format": "double",
          "description": "Tax sum that is excluded from the tax sum to be paid.",
          "type": "number"
        },
        "invoiceDate": {
          "format": "date-time",
          "type": "string"
        },
        "baseLineDate": {
          "format": "date-time",
          "type": "string"
        },
        "dueDate": {
          "format": "date-time",
          "description": "The last payment date before penalties.",
          "type": "string"
        },
        "cashDate": {
          "format": "date-time",
          "description": "The last payment date with discount.",
          "type": "string"
        },
        "cashPercent": {
          "format": "double",
          "description": "Percentage out of invoice total that can be excluded if the invoice is paid before the cashDate.",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "cashSum": {
          "format": "double",
          "description": "Total with tax to be paid before cashDate",
          "type": "number"
        },
        "referencePerson": {
          "description": "Person that has been referenced in the invoice.",
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "contractNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "description": {
          "description": "A short description of an invoice.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "invoiceTypeCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "invoiceTypeName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "paymentMethod": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentBlock": {
          "description": "Identifies if the payment of this invoice is denied by the ERP system and additonal steps like approval must take place before the invoice can be paid. Normally this parameter has value False when Basware P2P sends invoice for transfer.",
          "type": "boolean"
        },
        "paymentTermCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentTermName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "paymentTermExternalCode": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "paymentPlanReference": {
          "maxLength": 255,
          "minLength": 0,
          "type": "string"
        },
        "paymentRevelsalDocument": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "codingDate": {
          "format": "date-time",
          "type": "string"
        },
        "prebooked": {
          "description": "Identifies if the cost is already prebooked in ERP system. Some systems require prebooking the cost before invoice can be sent for payment.",
          "type": "boolean"
        },
        "referenceNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankIBAN": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankBBAN": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankBIC": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "supplierBankName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "accountingPeriod": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accountingGroup": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "text1": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text6": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text7": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text8": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text9": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text10": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text11": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text12": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text13": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text14": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text15": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text16": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text17": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text18": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text19": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text20": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text21": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text22": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text23": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text24": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text25": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text26": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text27": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text28": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text29": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "text30": {
          "description": "Multipurpose field with customer specific content.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric2": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric3": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric4": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric5": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric6": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric7": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric8": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric9": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric10": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric11": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric12": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric13": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric14": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric15": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric16": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric17": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric18": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric19": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "numeric20": {
          "format": "double",
          "description": "Multipurpose field with customer specific content.",
          "type": "number"
        },
        "date1": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date6": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date7": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date8": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date9": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "date10": {
          "format": "date-time",
          "description": "Multipurpose field with customer specific content.",
          "type": "string"
        },
        "invoiceImageURL": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "invoiceImageToken": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderNumbers": {
          "description": "A list of order numbers associated with invoice",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "Stamp time when transfer message was updated from Basware P2P or transfer message was updated from customer end.",
          "type": "string"
        },
        "codingRows": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StandardCodingEntity"
          }
        },
        "transferParameters": {
          "description": "A list of transfer parameters",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferParameterEntity"
          }
        },
        "transferResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransferResponseEntity"
          }
        },
        "removeResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RemoveResponseEntity"
          }
        },
        "prebookResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrebookResponseEntity"
          }
        },
        "paymentResponses": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentResponseEntity"
          }
        },
        "cashSumCompany": {
          "format": "double",
          "type": "number"
        },
        "cashSumOrganization": {
          "format": "double",
          "type": "number"
        },
        "exchangeRateBaseDate": {
          "format": "date-time",
          "type": "string"
        },
        "exchangeRateCompany": {
          "format": "double",
          "type": "number"
        },
        "exchangeRateOrganization": {
          "format": "double",
          "type": "number"
        },
        "taxSum1Company": {
          "format": "double",
          "type": "number"
        },
        "taxSum1Organization": {
          "format": "double",
          "type": "number"
        },
        "taxSum2Company": {
          "format": "double",
          "type": "number"
        },
        "taxSum2Organization": {
          "format": "double",
          "type": "number"
        },
        "currencyCodeCompany": {
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "currencyCodeOrganization": {
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "organizationElementCode": {
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "organizationElementName": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "grossSumCompany": {
          "format": "double",
          "type": "number"
        },
        "grossSumOrganization": {
          "format": "double",
          "type": "number"
        },
        "netSumCompany": {
          "format": "double",
          "type": "number"
        },
        "netSumOrganization": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "StandardCodingEntity": {
      "required": [
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "rowIndex": {
          "format": "int32",
          "description": "Unique number assigned to a row at the time of it's creation",
          "maximum": 100000.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "accountCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accountName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "costCenterCode": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "costCenterName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "deliveryNoteNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "lastComment": {
          "description": "Last user comment related to a coding row",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "matchingType": {
          "format": "int32",
          "description": "Order matching type(framework, return, service, standard)",
          "type": "integer"
        },
        "grossTotal": {
          "format": "double",
          "type": "number"
        },
        "grossTotalCompany": {
          "format": "double",
          "type": "number"
        },
        "grossTotalOrganization": {
          "format": "double",
          "type": "number"
        },
        "netTotal": {
          "format": "double",
          "type": "number"
        },
        "netTotalCompany": {
          "format": "double",
          "type": "number"
        },
        "netTotalOrganization": {
          "format": "double",
          "type": "number"
        },
        "orderLineNetTotal": {
          "format": "double",
          "type": "number"
        },
        "orderLineGrossTotal": {
          "format": "double",
          "type": "number"
        },
        "receivedQuantity": {
          "format": "double",
          "type": "number"
        },
        "receivedNetPrice": {
          "format": "double",
          "type": "number"
        },
        "receivedGrossPrice": {
          "format": "double",
          "type": "number"
        },
        "receivedNetTotal": {
          "format": "double",
          "type": "number"
        },
        "receivedGrossTotal": {
          "format": "double",
          "type": "number"
        },
        "organizationElementName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "organizationElementCode": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "freightSlip": {
          "type": "string"
        },
        "conversionNumerator": {
          "format": "double",
          "type": "number"
        },
        "conversionDeNumerator": {
          "format": "double",
          "type": "number"
        },
        "conversionDenominator": {
          "format": "double",
          "type": "number"
        },
        "orderedQuantity": {
          "format": "double",
          "type": "number"
        },
        "orderNetTotal": {
          "format": "double",
          "type": "number"
        },
        "orderGrossTotal": {
          "format": "double",
          "type": "number"
        },
        "orderedNetPrice": {
          "format": "double",
          "type": "number"
        },
        "orderedGrossPrice": {
          "format": "double",
          "type": "number"
        },
        "internalOrderCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "internalOrderName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "orderItemNumber": {
          "type": "string"
        },
        "orderNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "orderLineNumber": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "allocatedQuantity": {
          "format": "double",
          "type": "number"
        },
        "matchedQuantity": {
          "format": "double",
          "type": "number"
        },
        "matchedNetSum": {
          "format": "double",
          "type": "number"
        },
        "matchedGrossSum": {
          "format": "double",
          "type": "number"
        },
        "closeOrder": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "plant": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "profitCenterCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "profitCenterName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessUnitCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessUnitName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "projectCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "projectName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "projectSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "projectSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employeeCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employeeName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "vehicleNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "vehicleName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "customerCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "customerName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "conditionType": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "productCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "productName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "buyerName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderLineDescription": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderLinePriceUnit": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "orderLinePriceUnitDescription": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "partnerProfitCenter": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetCode": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetName": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptItemNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "materialGroup": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "fiscalYear": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "orderLineUOM": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "subUOM": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "commitmentItem": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "controllingArea": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "functionalArea": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "network": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "networkActivity": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "orderCodingRowNumber": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "ownerName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxJurisdictionCode": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent": {
          "format": "double",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "taxPercent2": {
          "format": "double",
          "type": "number"
        },
        "taxSum": {
          "format": "double",
          "type": "number"
        },
        "taxSumCompany": {
          "format": "double",
          "type": "number"
        },
        "taxSumOrganization": {
          "format": "double",
          "type": "number"
        },
        "taxSum2": {
          "format": "double",
          "type": "number"
        },
        "taxSum2Company": {
          "format": "double",
          "type": "number"
        },
        "taxSum2Organization": {
          "format": "double",
          "type": "number"
        },
        "rowOrigin": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "plannedAdditionalCostType": {
          "format": "int32",
          "description": "Indicates additional cost line",
          "type": "integer"
        },
        "dimCode1": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode2": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode3": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode4": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode5": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode6": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode7": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode8": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode9": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode10": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName1": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName2": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName3": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName4": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName5": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName6": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName7": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName8": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName9": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName10": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "num1": {
          "format": "double",
          "type": "number"
        },
        "num2": {
          "format": "double",
          "type": "number"
        },
        "num3": {
          "format": "double",
          "type": "number"
        },
        "num4": {
          "format": "double",
          "type": "number"
        },
        "num5": {
          "format": "double",
          "type": "number"
        },
        "text1": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "date1": {
          "format": "date-time",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "TransferParameterEntity": {
      "required": [
        "key",
        "value"
      ],
      "type": "object",
      "properties": {
        "key": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        }
      }
    },
    "TransferResponseEntity": {
      "required": [
        "externalCode",
        "success",
        "responseMessage",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 2,
          "type": "string"
        },
        "success": {
          "description": "Identifies if the invoice was succesfulle transfered to ERP system",
          "type": "boolean"
        },
        "responseMessage": {
          "description": "Message that gives more details of the deviance that was identified in the invoice details. The message is stored to a comment field in the invoice action log item that is created based on the result.",
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning transfer response.",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        },
        "voucherNumber1": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherNumber2": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "transferDate": {
          "format": "date-time",
          "type": "string"
        },
        "paymentBlock": {
          "type": "boolean"
        }
      }
    },
    "RemoveResponseEntity": {
      "required": [
        "externalCode",
        "responseMessage"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 2,
          "type": "string"
        },
        "success": {
          "description": "Identifies if the invoice was succesfully removed",
          "type": "boolean"
        },
        "responseMessage": {
          "description": "Message that gives more details of the deviance that was identified in the invoice details. The message is stored to a comment field in the invoice action log item that is created based on the result.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning transfer response.",
          "maxLength": 32,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PrebookResponseEntity": {
      "required": [
        "externalCode",
        "sourceSystem",
        "prebookDate",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 2,
          "type": "string"
        },
        "responseMessage": {
          "description": "Free text message that is written to invoice history",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning prebook response.",
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "voucherNum1": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "voucherNum2": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "prebookDate": {
          "format": "date-time",
          "type": "string"
        },
        "paymentBlock": {
          "type": "boolean"
        }
      }
    },
    "PaymentResponseEntity": {
      "required": [
        "externalCode",
        "sourceSystem",
        "paymentBlock"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Unique identifier of the payment response message",
          "maxLength": 36,
          "minLength": 2,
          "type": "string"
        },
        "success": {
          "description": "Indicates that payment was successfully delivered to ERP. Basware P2P is not reacting if the success=False.",
          "type": "boolean"
        },
        "responseMessage": {
          "description": "Message that gives more details of the deviance that was identified in the invoice details. The message is stored to a comment field in the invoice action log item that is created based on the result.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "sourceSystem": {
          "description": "Indicates the system that is returning payment response.",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "paymentDate": {
          "format": "date-time",
          "type": "string"
        },
        "paymentTermCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentBlock": {
          "type": "boolean"
        },
        "paymentMethod": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paidTotal": {
          "format": "double",
          "type": "number"
        },
        "cashDiscount": {
          "format": "double",
          "type": "number"
        },
        "checkNumber": {
          "description": "Unique identifier from the check used in payment transaction.",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentMessage": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "paymentNumber": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "paymentDocument": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "paymentReversalDocument": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "ResponseEntityList": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string"
        },
        "hasErrors": {
          "type": "boolean"
        },
        "errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorEntity"
          }
        }
      }
    },
    "ErrorEntity": {
      "type": "object",
      "properties": {
        "externalCode": {
          "type": "string"
        },
        "type": {
          "enum": [
            "BUSINESS",
            "VALIDATION",
            "TECHNICAL",
            "SECURITY"
          ],
          "type": "string"
        },
        "code": {
          "enum": [
            "EXTERNAL_CODE_MISMATCH",
            "SCHEMA_VALIDATION_ERROR",
            "CONFLICT_IN_POST",
            "DATA_ORIGIN_VALIDATION_ERROR",
            "ACCESS_TOKEN_VALIDATION_ERROR",
            "CREDENTIAL_VALIDATION_ERROR",
            "PARAMETER_VALIDATION_ERROR",
            "UNEXPECTED_ERROR",
            "METHOD_NOT_ALLOWED",
            "ENTITY_NOT_FOUND",
            "DATA_VALIDATION_FAILED",
            "SNS_PUBLISH_ERROR"
          ],
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "info": {
          "type": "string"
        }
      }
    },
    "AccountResponse": {
      "required": [
        "accounts"
      ],
      "type": "object",
      "properties": {
        "accounts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountEntity"
          }
        }
      }
    },
    "AccountEntity": {
      "required": [
        "accountCode",
        "accountNames",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "accountCode": {
          "description": "Defines a code for the account that is used for invoice coding in advanced validations\r\nType- string, Example- AccCode1",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "10012"
        },
        "accountNames": {
          "description": "Defines a name for the account that is used for invoice coding in advanced validations\r\nType- string, Example- AccName1",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "parents": {
          "description": "Parent object structure. Used in Purchase Manager.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        },
        "companies": {
          "description": "List of company units to associate account to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "LanguageTranslationEntity": {
      "required": [
        "translation",
        "language"
      ],
      "type": "object",
      "properties": {
        "translation": {
          "maxLength": 2000,
          "minLength": 2,
          "type": "string",
          "example": "Office supplies"
        },
        "language": {
          "maxLength": 10,
          "minLength": 2,
          "type": "string",
          "example": "en-US"
        }
      }
    },
    "ParentEntity": {
      "required": [
        "parentType",
        "parentCodes"
      ],
      "type": "object",
      "properties": {
        "parentType": {
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "parentCodes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parents": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        }
      }
    },
    "AccountCompanyEntity": {
      "required": [
        "companyCode",
        "inherit",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that the account is mapped to\r\nType- string, Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "inherit": {
          "description": "The value specifies whether the property is inherited to lower organizations.\r\nType- Boolean (true/false), Example- false",
          "type": "boolean"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- false",
          "type": "boolean"
        }
      }
    },
    "AdvancedPermissionResponse": {
      "type": "object",
      "properties": {
        "advancedPermissions": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedPermissionEntity"
          }
        }
      }
    },
    "AdvancedPermissionEntity": {
      "description": "",
      "required": [
        "loginAccount",
        "limit",
        "priorityIndex",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "loginAccount": {
          "description": "Specifies the user's login name\r\nType-string , Example- BASWARE\\JYRKI",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "rowApproveIterationCount": {
          "format": "int32",
          "description": "This field is used to define if the user is shown in a picker in row approval.\r\nType-string , Example- 1",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "permissionCode1": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension1",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "permissionCode2": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension2",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "permissionCode3": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension3",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "permissionCode4": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension4",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "permissionCode5": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension5",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "permissionCode6": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension6",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "permissionCode7": {
          "description": "Permission code is a dimension mapped in Configuration tool. The value can be: *(asterisk, meaning \"all\"), numeric ​(123, 23,45 - comma separated values or range values, for example 10-100), or alphanumeric. The field can also be left empty.\r\nType-string , Example- Dimension7",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "limit": {
          "format": "double",
          "description": "Defines the user's row approval limit\r\nType-Numeric , Example- 100",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "priorityIndex": {
          "format": "int32",
          "description": "If there is more than one approver in the user picker, the priority index defines the order of the approvers in the picker.\r\nType-Numeric , Example- 1",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "module": {
          "description": "This field defines the P2P module. Possible values are: \"Invoice Administration and Purchase\" \"Invoice Administration\" \"Purchase​\"\r\nType-string , Example- Purchase",
          "maxLength": 28,
          "minLength": 0,
          "type": "string"
        },
        "excludedValue": {
          "description": "This column is used to exclude a user from a process for coding rows requiring approval. When a user is excluded, the user will not receive an invoice for approval. The value can be anything, for example numeric ​(123, 23,45 - comma separated values), alphanumeric, special characters except single quote ('). The field can also be left empty. This field is based on tenant settings.\r\nType-string , Example- ExcludedValue1",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string"
        },
        "companies": {
          "description": "List of company units to associate advanced permission to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedPermissionCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "AdvancedPermissionCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that is attached to the advanced user right\r\nType-string , Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "AdvancedValidationResponse": {
      "required": [
        "advancedValidations"
      ],
      "type": "object",
      "properties": {
        "advancedValidations": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedValidationEntity"
          }
        }
      }
    },
    "AdvancedValidationEntity": {
      "required": [
        "interface",
        "keyValue",
        "dimension1",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "interface": {
          "description": "Interface field for validation rule",
          "maxLength": 40,
          "minLength": 1,
          "type": "string",
          "example": "AdvancedValidation"
        },
        "keyValue": {
          "description": "Key value for validation rule, e.g. value of account code, value of costcenter cote, ...",
          "maxLength": 40,
          "minLength": 1,
          "type": "string",
          "example": "10012"
        },
        "dimension1": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension1From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension1To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension2": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension2From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension2To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension3": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension3From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension3To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension4": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension4From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension4To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension5": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension5From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension5To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension6": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension6From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension6To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension7": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension7From": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "dimension7To": {
          "maxLength": 40,
          "minLength": 0,
          "type": "string"
        },
        "companies": {
          "description": "List of company units to associate account to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdvancedValidationCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "AdvancedValidationCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Company code identifier. Corresponds to company code used in P2P. Used as key in this array.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "Active / Not active setting",
          "type": "boolean"
        }
      }
    },
    "CostCenterResponse": {
      "required": [
        "costCenters"
      ],
      "type": "object",
      "properties": {
        "costCenters": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCenterEntity"
          }
        }
      }
    },
    "CostCenterEntity": {
      "required": [
        "costCenterCode",
        "costCenterNames",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "costCenterCode": {
          "description": "Specifies a code for the cost center that is mapped with organizations for billing purposes\r\nType- string, Example- CCcode1",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "CCcode1"
        },
        "costCenterNames": {
          "description": "Specifies a name for the cost center that is mapped with organizations for billing purposes\r\nType- string, Example- CCname1",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "parents": {
          "description": "Parent object structure. Used in Purchase Manager.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        },
        "companies": {
          "description": "List of company units to associate costcenter to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostCenterCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "CostCenterCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that the cost center is mapped to\r\nType- string, Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "ErrorFeedbackResponse": {
      "required": [
        "errorList"
      ],
      "type": "object",
      "properties": {
        "errorList": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ErrorFeedbackEntity"
          }
        }
      }
    },
    "ErrorFeedbackEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "requestId": {
          "type": "string"
        },
        "externalCode": {
          "type": "string"
        },
        "errorEntity": {
          "type": "string"
        },
        "entityType": {
          "enum": [
            "Account",
            "Contract",
            "CostCenter",
            "TaxCode",
            "ExchangeRate",
            "PaymentTerm",
            "Budget",
            "User",
            "Project",
            "MatchingOrder",
            "MatchingOrderLine",
            "AccountingDocument",
            "GenericList",
            "MatchingGoodsReceipt",
            "AdvancedPermission",
            "TransferResponse",
            "PaymentResponse",
            "PrebookResponse",
            "Vendor",
            "AdvancedValidation"
          ],
          "type": "string"
        },
        "errorStamp": {
          "format": "date-time",
          "type": "string"
        },
        "errors": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "targetSystem": {
          "type": "string"
        }
      }
    },
    "ExchangeRateResponse": {
      "required": [
        "exchangeRates"
      ],
      "type": "object",
      "properties": {
        "exchangeRates": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRateEntity"
          }
        }
      }
    },
    "ExchangeRateEntity": {
      "required": [
        "rate",
        "currencyCodeTo",
        "currencyCodeFrom",
        "validFrom",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "rate": {
          "format": "double",
          "description": "Defines the selected currency's exchange rate\r\nType- Numeric , Example- 0.13412784",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number",
          "example": "0.13412784"
        },
        "currencyCodeTo": {
          "description": "The currency code defines the base currency.\r\nType- string, Example- EUR",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "EUR"
        },
        "currencyCodeFrom": {
          "description": "The currency code defines the quote currency.\r\nType- string, Example- AUD",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "AUD"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Defines the date when the exchange rate becomes valid\r\nType- Date-Time, Example- 2012-02-07",
          "type": "string",
          "example": "2012-01-02"
        },
        "companies": {
          "description": "List of company units to associate exchangerate to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExchangeRateCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "ExchangeRateCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines the organization that the exchange rate is mapped to\r\nType- string, Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "GenericListResponse": {
      "required": [
        "listItems"
      ],
      "type": "object",
      "properties": {
        "listItems": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericListEntity"
          }
        }
      }
    },
    "GenericListEntity": {
      "required": [
        "externalCode",
        "inherit",
        "companies"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Id of the list entry.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6532e1d70e194ff8a193e42beab4a0d9"
        },
        "inherit": {
          "description": "Gets or Sets Inherit",
          "type": "boolean",
          "example": false
        },
        "text_1": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_2": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_3": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_4": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_5": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_6": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_7": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_8": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_9": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_10": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_11": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_12": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_13": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_14": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_15": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_16": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_17": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_18": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_19": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_20": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_21": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_22": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_23": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_24": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text_25": {
          "description": "Text column for lists",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "number_1": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_2": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_3": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_4": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_5": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_6": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_7": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_8": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_9": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_10": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_11": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_12": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_13": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_14": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "number_15": {
          "format": "double",
          "description": "Gets or Sets custom number value",
          "maximum": 1000000000.0,
          "minimum": 0.0,
          "type": "number"
        },
        "dateValue_1": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_2": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_3": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_4": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_5": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_6": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_7": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_8": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_9": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_10": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_11": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_12": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_13": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_14": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "dateValue_15": {
          "format": "date-time",
          "description": "Gets or Sets custom date value",
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "companies": {
          "description": "List of company units to associate genericlist to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GenericListCompanyEntity"
          }
        },
        "parents": {
          "description": "Parent object structure. Used in Purchase Manager.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ParentEntity"
          }
        },
        "listContent": {
          "enum": [
            "Plant",
            "ProfitCenter",
            "BusinessUnit",
            "Project",
            "ProjectSub",
            "Employee",
            "Vehicle",
            "Customer",
            "AccAssignmentCategory",
            "Budget",
            "Service",
            "BusinessArea",
            "PartnerProfitCenter",
            "FixedAsset",
            "FixedAssetSubCode",
            "WorkOrderCode",
            "WorkOrderSubCode",
            "CommitmentItem",
            "ControllingArea",
            "FunctionalArea",
            "Network",
            "NetworkActivity",
            "Tax",
            "TaxJurisdiction",
            "Dimension1",
            "Dimension2",
            "Dimension3",
            "Dimension4",
            "Dimension5",
            "Dimension6",
            "Dimension7",
            "Dimension8",
            "Dimension9",
            "Dimension10",
            "InternalOrder",
            "SalesOrder",
            "SalesOrderSub"
          ],
          "type": "string"
        }
      }
    },
    "GenericListCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Company code identifier. Corresponds to company code used in P2P. Used as key in this array.",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "Gets or Sets Active",
          "type": "boolean"
        }
      }
    },
    "OrderLineResponse": {
      "required": [
        "matchingOrderLines"
      ],
      "type": "object",
      "properties": {
        "matchingOrderLines": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineEntity"
          }
        }
      }
    },
    "OrderLineEntity": {
      "required": [
        "externalCode",
        "orderExternalCode",
        "lineNumber",
        "quantity",
        "matchingMode"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Unique UUID for order line\r\nType- String, Example- 6741ecc7-848a-443c-83ad-ea95e4df06yh",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6741ecc7-848a-443c-83ad-ea95e4df06yh"
        },
        "orderExternalCode": {
          "description": "externalCode of the purchase order where the order line belongs\r\nType- String, Example- 450004534",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "450004534"
        },
        "lineNumber": {
          "description": "Code that uniquely identifies a line item on the purchase order\r\nType- String, Example- 10",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "10"
        },
        "sortNumber": {
          "format": "int32",
          "description": "Number that uniquely identifies a line item and its position on the purchase order\r\nType- String, Example- 10",
          "type": "integer",
          "example": "10"
        },
        "quantity": {
          "format": "double",
          "description": "Defines how many items a customer has purchased. The quantity must be higher than zero. With isBlanketOrderLine TRUE, the quantity must be set 1.\r\nType- Numeric, Example- 1",
          "type": "number",
          "example": "1"
        },
        "netSum": {
          "format": "double",
          "description": "Total amount of the ordered amount excluding tax amount of the purchase order line\r\nType- String, Example- 1000",
          "type": "number",
          "example": "1000"
        },
        "grossSum": {
          "format": "double",
          "description": "Total amount of the ordered amount including tax amount of the purchase order line\r\nType- Numeric, Example- 10",
          "type": "number",
          "example": "10"
        },
        "currencyCode": {
          "description": "A code that identifies the currency of the total payable amount in the purchase order line. Valid values are in ISO 4217 Alpha format. When empty, the currency from the purchase order is used. It is possible to have different currencies in order lines with different needs like products and transportation costs. Exchange rates for matching are based on the exchange rate date defined in the purchase invoice. Gain/loss is expected based on the difference between rate on receive date and rate on invoice date.\r\nType- String, Example- USD",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "USD"
        },
        "matchingMode": {
          "enum": [
            "Standard",
            "Blanket",
            "Return"
          ],
          "type": "string"
        },
        "isReceiptRequired": {
          "description": "Indicates whether the line item requires receipts. When FALSE, the line item does not require receipts. When TRUE, the system evaluates the received quantity and sum at the time of matching. \r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "isReceiptBasedMatching": {
          "description": "Indicates whether the matching takes place with line item or a receipt. When FALSE, a matched invoice is associated with the purchase order line. When TRUE, an invoice is matched with a receipt that belongs to the line item. \r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "isOverreceivalAllowed": {
          "description": "Indicates whether over-delivery is allowed for the line item. When FALSE, the system evaluates the matching using the ordered quantity instead of possible higher quantity from receipts.\r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "isClosed": {
          "description": "Indicates whether the line item is closed.  When TRUE, new receipts are not expected for the order line and matching is possible only with unmatched or partly matched goods receipts that have been recorded to the purchase order earlier. When FALSE, the order line is open for new deliveries and matching.\r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "isDeleted": {
          "description": "Indicates whether the line item is deleted. If TRUE, the line item has been marked as deleted. Deletion is possible only if the line has not been matched.\r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "isSelfApproved": {
          "description": "Indicates whether the line item has passed the approval flow set for the purchasing process. If TRUE, the line item has not been approved.\r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "uom": {
          "description": "Unit of measure of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.\r\nType- String, Example- PCE",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "PCE"
        },
        "subUOM": {
          "description": "Alternative unit of measurement of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.\r\nType- String, Example- G",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "G"
        },
        "netPrice": {
          "format": "double",
          "description": "The price of the line item excluding tax\r\nType- Numeric, Example- 100",
          "type": "number",
          "example": "100"
        },
        "grossPrice": {
          "format": "double",
          "description": "The price of the line item including tax\r\nType- Numeric, Example- 116",
          "type": "number",
          "example": "116"
        },
        "priceUnit": {
          "description": "TUnit by which the line item is sold\r\nType- string, Example- string",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "priceUnitDescription": {
          "description": "Name of the price unit\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "taxCode": {
          "description": "A tax identifier for a company. The identifier assigned for tax purposes to a party by the taxation authority.\r\nType- string, Example- VN",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "VN"
        },
        "taxPercent": {
          "format": "double",
          "description": "The tax rate for the category, expressed as a percentage\r\nType- Numeric, Example- 16",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number",
          "example": "16"
        },
        "taxPercent2": {
          "format": "double",
          "description": "Return tax. \r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "taxSum": {
          "format": "double",
          "description": "Total amount of the taxes. The total tax amount for particular tax scheme, for example VAT; the sum of each of the tax subtotals for each tax category within the tax scheme.\r\nType- Numeric, Example- 116",
          "type": "number",
          "example": "116"
        },
        "taxSum2": {
          "format": "double",
          "type": "number"
        },
        "invoicedQuantity": {
          "format": "double",
          "description": "Quantity that already has been matched from the line item\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "invoicedNetSum": {
          "format": "double",
          "description": "Sum that already has been matched, excluding tax\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "invoicedGrossSum": {
          "format": "double",
          "description": "Sum that already has been matched, including tax\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order starts. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-01-01T07:36:13.053Z",
          "type": "string",
          "example": "2018-01-01T07:36:13.053Z"
        },
        "validTo": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order ends. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-12-31T07:36:13.053Z",
          "type": "string",
          "example": "2018-12-31T07:36:13.053Z"
        },
        "productCode": {
          "description": "A code that identifies the purchased items to the party that is the supplier of the goods/services.   \r\nType- string, Example- 1950469687",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "1950469687"
        },
        "productName": {
          "description": "Name of the product \r\nType- string, Example- Envelopes A5 - 1000 pce/package",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Envelopes A5 - 1000 pce/package"
        },
        "materialGroup": {
          "description": "A code that groups together several materials or services with the same characteristics   \r\nType- string, Example- Communication",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Communication"
        },
        "globalTradeItemNumber": {
          "description": "The GTIN is a globally unique 14-digit number used to identify trade items, products, or services.   \r\nType- string, Example- 00012345678905",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "00012345678905"
        },
        "unspsc": {
          "description": "The United Nations Standard Products and Services Code is a unique 8-digit number used to identify trade items, products, and services.   \r\nType- string, Example- 44121504",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "44121504"
        },
        "buyerProductCode": {
          "description": "A code that identifies purchased items for internal reporting and communication  \r\nType- string, Example- env0002",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "env0002"
        },
        "description": {
          "description": "Description of the business document's line item \r\nType- string, Example- string",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "comment": {
          "description": "Free-form text pertinent to this document, conveying information that is not contained explicitly in other structures\r\nType- string, Example- string",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "requestedDeliveryDate": {
          "format": "date-time",
          "description": "Date the goods are to be delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.  \r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "string"
        },
        "actualDeliveryDate": {
          "format": "date-time",
          "description": "Date the goods are to be delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "string"
        },
        "text1": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text2": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text3": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text4": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text5": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text6": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text7": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text8": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text9": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text10": {
          "description": "Custom field in the business document \r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Custom field in the business document \r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric2": {
          "format": "double",
          "description": "Custom field in the business document \r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric3": {
          "format": "double",
          "description": "Custom field in the business document \r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric4": {
          "format": "double",
          "description": "Custom field in the business document \r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric5": {
          "format": "double",
          "description": "Custom field in the business document \r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document \r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document \r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document \r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document \r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document \r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "orderLineCoding": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineCodingEntity"
          }
        },
        "goodsReceipts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoodsReceiptEntity"
          }
        },
        "referenceUsers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderLineUserEntity"
          }
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrderLineCodingEntity": {
      "required": [
        "externalCode",
        "rowIndex",
        "allocatedQuantity"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Unique UUID for order line\r\nType- string, Example- 1",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "rowIndex": {
          "format": "int32",
          "description": "A code that uniquely identifies a coding row item on the purchase order line\r\nType- string, Example- 1",
          "maximum": 100000.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "netTotal": {
          "format": "double",
          "description": "Represents total excluding tax that is allocated for the accounting dimensions set in the coding row item\r\nType- Numeric, Example- 1000",
          "type": "number"
        },
        "grossTotal": {
          "format": "double",
          "description": "Represents total including tax that is allocated for the accounting dimensions set in the coding row item\r\nType- Numeric, Example- 1160",
          "type": "number"
        },
        "accountCode": {
          "description": "A code that identifies the general ledger account to where the matched spend is recorded\r\nType- string, Example- 111111",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accountName": {
          "description": "Name of the account\r\nType- string, Example- Other marketing expences",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "costCenterCode": {
          "description": "A code that identifies the part of an organization to which costs may be charged for accounting purposes\r\nType- string, Example- 1010",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "costCenterName": {
          "description": "Name of the cost center\r\nType- string, Example- Presales and Marketing",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "projectCode": {
          "description": "A code that identifies the project when the spend is required to be recorded\r\nType- string, Example- 1111",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "projectName": {
          "description": "Name of the project\r\nType- string, Example- Basware Connect 2018",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "conversionNumerator": {
          "format": "double",
          "description": "A conversion factor is used to change the units of a nominator in quantity without changing its value. For example, one envelope weighs 7 g.\r\nType- Numeric, Example- 7",
          "type": "number"
        },
        "conversionDenominator": {
          "format": "double",
          "description": "A conversion factor is used to change the units of a denominator in quantity without changing its value. \r\nType- Numeric, Example- 1",
          "type": "number"
        },
        "conversionDeNumerator": {
          "format": "double",
          "type": "number"
        },
        "taxCode": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent": {
          "format": "double",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "taxPercent2": {
          "format": "double",
          "type": "number"
        },
        "taxSum": {
          "format": "double",
          "type": "number"
        },
        "taxSum2": {
          "format": "double",
          "type": "number"
        },
        "partnerProfitCenter": {
          "description": "Identifies transfers of goods and services between profit centers\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetCode": {
          "description": "Long-term tangible piece of property that a company owns and uses in its operations to generate income\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetName": {
          "description": "Name of the fixed asset\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "materialGroup": {
          "description": "A code that groups together several materials or services with the same characteristics\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetSubCode": {
          "description": "A code identifying an accessory / special equipment that you maintain on a fixed asset\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "fixedAssetSubName": {
          "description": "Name of the sub-asset\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "internalOrderCode": {
          "description": "A code to identify an internal order that normally is used to plan, collect, and settle the costs of internal jobs and tasks\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "internalOrderName": {
          "description": "Name of the internal order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "profitCenterCode": {
          "description": "A code to identify a part of a business which is expected to make an identifiable contribution to the organization's profits\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "profitCenterName": {
          "description": "Name of the profit center\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessUnitCode": {
          "description": "A code to identify a division of a large company that operates as an independent enterprise with responsibility for a particular range of products or activities\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessUnitName": {
          "description": "Name of the business unit\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "projectSubCode": {
          "description": "A code to identify a project that is part of a larger project\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "projectSubName": {
          "description": "Name of the sub-project\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employeeCode": {
          "description": "A code to identify an employee related to the cost\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "employeeName": {
          "description": "Name of the employee\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "vehicleNumber": {
          "description": "A code to identify a vehicle related to the cost\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "vehicleName": {
          "description": "Name of the vehicle\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderCode": {
          "description": "A code to identify a sales order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderName": {
          "description": "Name of the sales order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderSubCode": {
          "description": "A code to identify another order that is part of a sales order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "salesOrderSubName": {
          "description": "Name of the sub sales order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "customerCode": {
          "description": "A code to identify a customer\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "customerName": {
          "description": "Name of the customer\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryCode": {
          "description": "A code to identify account assignment category\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accAssignmentCategoryName": {
          "description": "A code to identify a budget where the cost belongs\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetCode": {
          "description": "Name of the bugdet\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "budgetName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceCode": {
          "description": "A code to identify a service related to the cost\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "serviceName": {
          "description": "Name of the service\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaCode": {
          "description": "A code to identify a business area\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "businessAreaName": {
          "description": "Name of the business area\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "taxJurisdictionCode": {
          "description": "A code to identify which area or which tax authority is involved\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "subUOM": {
          "description": "Alternative unit of measurement of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as a string.\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderCode": {
          "description": "A code to identify work order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderName": {
          "description": "Name of the work order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubCode": {
          "description": "A code to identify another order related to work order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "workOrderSubName": {
          "description": "Name of the sub work order\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "commitmentItem": {
          "description": "A code to identify an element that represents the functional grouping of expenditures and revenues within a financial management area\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "controllingArea": {
          "description": "A code to identify an organizational unit in an organization that represents a closed system used for cost accounting purposes\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "functionalArea": {
          "description": "A code to identify a functional area, like teams of employees, who have similar skills and expertise\r\nType- string, Example- string",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "dimCode1": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode2": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode3": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode4": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode5": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode6": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode7": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode8": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode9": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimCode10": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName1": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName2": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName3": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName4": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName5": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName6": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName7": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName8": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName9": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "dimName10": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "num1": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number"
        },
        "num2": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number"
        },
        "num3": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number"
        },
        "num4": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number"
        },
        "num5": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number"
        },
        "allocatedQuantity": {
          "format": "double",
          "type": "number"
        },
        "text1": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "description": "Custom field in the business document\r\nType- string, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "network": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "networkActivity": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "GoodsReceiptEntity": {
      "required": [
        "externalCode",
        "goodsReceiptNumber",
        "quantity"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Unique UUID for order line\r\nType- String , Example- 6741ecc7-848a-443c-83ad-ea95e4df0gr2",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "goodsReceiptNumber": {
          "description": "Identifier for an individual receipt activity\r\nType- String , Example- 1234567890",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "goodsReceiptLineNumber": {
          "description": "Unique identifier within one receipt activity\r\nType- String , Example- 10",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "referenceGRExternalCode": {
          "description": "externalCode of the original receipt when this receipt item is a negative return/cancellation item for an earlier receipt.\r\nType- String , Example- 6741ecc7-848a-443c-83ad-ea95e4df0gr1",
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "deliveryNoteNumber": {
          "description": "Identifier of the delivery from where the receipt was made. \r\nType- String , Example- 1234-56789",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "bestFitGrouping": {
          "description": "Grouping factor for received items that are invoiced together without any delivery indicator. The value can be for example a delivery note number or a delivery date. \r\nType- DateTime , Example- 2018-07-02T07:36:13.053Z",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "quantity": {
          "format": "double",
          "description": "Received quantity\r\nType- Numeric , Example- 10",
          "type": "number"
        },
        "netSum": {
          "format": "double",
          "description": "Total amount of the received item excluding tax\r\nType- Numeric , Example- 100",
          "type": "number"
        },
        "grossSum": {
          "format": "double",
          "description": "Total amount of the received item including tax\r\nType- Numeric , Example- 1160",
          "type": "number"
        },
        "netPrice": {
          "format": "double",
          "description": "The price of the received item excluding tax\r\nType- Numeric , Example- 100",
          "type": "number"
        },
        "grossPrice": {
          "format": "double",
          "description": "The price of the received item including tax\r\nType- Numeric , Example- 116",
          "type": "number"
        },
        "isDeleted": {
          "description": "Indicates whether the received item is deleted. If TRUE, the received item has been marked as deleted. Deletion is possible only if the line has not been matched.\r\nType- Boolan , Example- True",
          "type": "boolean"
        },
        "invoicedQuantity": {
          "format": "double",
          "description": "Quantity that already has been matched from the line item\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "invoicedNetSum": {
          "format": "double",
          "description": "Sum that already has been matched excluding tax\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "invoicedGrossSum": {
          "format": "double",
          "description": "Sum that already has been matched including tax\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "unitOfMeasure": {
          "description": "Unit of measure of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.\r\nType- string , Example- PCE",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "subUnitOfMeasure": {
          "description": "Alternative unit of measurement of the line item. Valid value is UN/ECE CEFACT Trade Facilitation Recommendation No. 20 common code value represented as string.\r\nType- string , Example- G",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptType": {
          "format": "int32",
          "description": "Custom enumeration identifying the type of the receipt\r\nType- string , Example- 0",
          "type": "integer"
        },
        "receiveMethod": {
          "format": "int32",
          "description": "Custom enumeration identifying the way goods were received\r\nType- string , Example- 0",
          "type": "integer"
        },
        "voucherNumber": {
          "description": "A reference to a buyer-generated document that authorizes a purchase transaction\r\nType- string , Example- 201809PO0001",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "goodsReceiptNote": {
          "description": "Free-form text applying to the goods receipt. This field may contain notes or any other similar information that is not contained explicitly in another structure. \r\nType- string , Example- Quality check ok",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "fiscalYear": {
          "format": "date-time",
          "description": "Used when goods or services are received this fiscal year and will be paid for next fiscal year \r\nType- DateTime , Example- 2018-01-01T00:00:00.000Z",
          "type": "string"
        },
        "deliveryDate": {
          "format": "date-time",
          "description": "Date when the goods/services are delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime , Example- 2018-01-01T00:00:00.000Z",
          "type": "string"
        },
        "productSerialNumber": {
          "description": "A serial number is a code to uniquely identify the received item.\r\nType- string , Example- 8-01553-01",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text1": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text2": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text3": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text4": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text5": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text6": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text7": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text8": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text9": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "text10": {
          "description": "Custom field in the business document\r\nType- string , Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "numeric2": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "numeric3": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "numeric4": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "numeric5": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric , Example- 0",
          "type": "number"
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime , Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime , Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime , Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime , Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document\r\nType- DateTime , Example- 2018-07-02T07:36:13.053Z",
          "type": "string"
        }
      }
    },
    "OrderLineUserEntity": {
      "type": "object",
      "properties": {
        "userExternalCode": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "userEmail": {
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "userRole": {
          "enum": [
            "Buyer",
            "Owner",
            "ReferencePerson",
            "Other"
          ],
          "type": "string"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "OrderResponse": {
      "required": [
        "matchingOrders"
      ],
      "type": "object",
      "properties": {
        "matchingOrders": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntity"
          }
        }
      }
    },
    "OrderEntity": {
      "required": [
        "externalCode",
        "orderNumber",
        "sourceSystem",
        "companyCode",
        "organizationElementCode",
        "currencyCode",
        "supplierCode"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "External system identifier of the business document. Serial number that is issued once only by purchase order issuer to identify the order.\r\nType- String, Example- 6741ecc7-848a-443c-83ad-ea95e4df06fa",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "6741ecc7-848a-443c-83ad-ea95e4df06fa"
        },
        "orderNumber": {
          "description": "Identifier for a document that contains details of a purchase placed by a customer\r\nType- String, Example- 450004534",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "450004534"
        },
        "sourceSystem": {
          "description": "Identifier for a purchasing system from where the purchase order is originated\r\nType- String, Example- SAP_DEMO",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "SAPEUR1"
        },
        "companyCode": {
          "description": "Identifier for an organization element that represent the legal structure of an organization. A purchase order company is compared with the values set in the company filter when the system identifies the correct matching configuration to be used. It is also used when searching purchase orders to be matched by the system or a user.\r\nType- String, Example- 1010",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "1010"
        },
        "companyName": {
          "description": "A name of the organization element\r\nType- String, Example- Amazing Store Central City, Phoenix, Arizona",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Amazing Store Central City, Phoenix, Arizona"
        },
        "organizationElementCode": {
          "description": "Identifier for an administrative organization element on top of the the company set for the purchase order. The organization element is used to identify if the user has rights to see the purchase order in Basware P2P Matching view.\r\nType- String, Example- 1000",
          "maxLength": 25,
          "minLength": 2,
          "type": "string",
          "example": "1000"
        },
        "organizationElementName": {
          "description": "Name of the organization element\r\nType- String, Example- Amazing Store Inc.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Amazing Store Inc."
        },
        "orderTypeCode": {
          "description": "A grouping element for purchase orders. orderTypeCode is commonly used in OM Category filters..\r\nType- String, Example- NB",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "NB"
        },
        "currencyCode": {
          "description": "Currency presentation of the purchase order document. Valid values are in ISO 4217 Alpha format.\r\nType- String, Example- USD",
          "maxLength": 3,
          "minLength": 2,
          "type": "string",
          "example": "USD"
        },
        "created": {
          "format": "date-time",
          "description": "The date when the purchase order was issued. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2017-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2017-07-02T07:36:13.053Z"
        },
        "isClosed": {
          "description": "Indicates whether the purchase order is closed. If TRUE, a purchase order has been marked as closed. All purchase order lines also get closed.  \r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "description": {
          "description": "Indicates whether the purchase order is deleted. If TRUE, a purchase order has been marked as deleted.  \r\nType- Boolean, Example- False",
          "maxLength": 1000,
          "minLength": 0,
          "type": "string",
          "example": "Economy letters - 500"
        },
        "purchaseOrganizationCode": {
          "description": "Party that is the accountable buyer of the goods/services in the referred business document. The purchaseOrganizationCode does not have an impact to the matching process.  \r\nType- String, Example- 1017",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "1017"
        },
        "purchaseOrganizationName": {
          "description": "Name of the purchase organization unit  \r\nType- String, Example- Marketing",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Marketing"
        },
        "supplierCode": {
          "description": "Party that is the supplier of the goods/services in the referred business document  \r\nType- String, Example- 114612065012",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "114612065012"
        },
        "supplierName": {
          "description": "Name of the supplier\r\nType- String, Example- Acme Supplier Inc.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Acme Supplier Inc."
        },
        "invoicingSupplierCode": {
          "description": "Party that is the accountable supplier of the goods/services in the referred business document\r\nType- String, Example- 540077",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "540077"
        },
        "invoicingSupplierName": {
          "description": "Name of the accountable supplier\r\nType- String, Example- Office Warehouse Inc.",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Office Warehouse Inc."
        },
        "requestedDeliveryDate": {
          "format": "date-time",
          "description": "Date when goods/services are expected to be delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "actualDeliveryDate": {
          "format": "date-time",
          "description": "Date when goods/services were delivered. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order starts. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-01-01T07:36:13.053Z",
          "type": "string",
          "example": "2018-01-01T07:36:13.053Z"
        },
        "validTo": {
          "format": "date-time",
          "description": "Date when the validity of the purchase order ends. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-12-31T07:36:13.053Z",
          "type": "string",
          "example": "2018-12-31T07:36:13.053Z"
        },
        "paymentTermCode": {
          "description": "Identifier for the agreed payment term that is to be used when supplier charges the customer. The field does not have an impact to the matching process.\r\nType- String, Example- 30EM",
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "paymentTermName": {
          "description": "Name of the payment term\r\nType- String, Example- 30 days end of month",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "30 days end of month"
        },
        "text1": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text2": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text3": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text4": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text5": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text6": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text7": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text8": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text9": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "text10": {
          "description": "Custom field in the business document\r\nType- String, Example- string",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "string"
        },
        "numeric1": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric2": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric3": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric4": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "numeric5": {
          "format": "double",
          "description": "Custom field in the business document\r\nType- Numeric, Example- 0",
          "type": "number",
          "example": "0"
        },
        "date1": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date2": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date3": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date4": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "date5": {
          "format": "date-time",
          "description": "Custom field in the business document. Valid values are in format: CCYY-MM-DD. If the time zone is known, it must be represented with +hh:mm or -hh:mm or Z (which means UTC). If the time zone is not known, it must be left empty.\r\nType- DateTime, Example- 2018-07-02T07:36:13.053Z",
          "type": "string",
          "example": "2018-07-02T07:36:13.053Z"
        },
        "isInvoiced": {
          "description": "Indicates whether the purchase order is invoiced. If TRUE, a purchase order has been marked as fully invoiced. By default, the field does not have an impact to the matching process.\r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "isDelivered": {
          "description": "Indicates whether the purchase order is delivered. If TRUE, a purchase order has been marked as fully invoiced. By default, the field does not have an impact to the matching process.\r\nType- Boolean, Example- False",
          "type": "boolean",
          "example": "False"
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        }
      }
    },
    "PaymentTermResponse": {
      "required": [
        "paymentTerms"
      ],
      "type": "object",
      "properties": {
        "paymentTerms": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTermEntity"
          }
        }
      }
    },
    "PaymentTermEntity": {
      "required": [
        "paymentTermCode",
        "paymentTermNames",
        "validFrom",
        "validTo",
        "companies",
        "paymentTermDiscountRules",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "paymentTermCode": {
          "description": "Specifies a code for a payment term\r\nType- string, Example- NT60",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "NT60"
        },
        "paymentTermNames": {
          "description": "Specifies a name for a payment term\r\nType- string, Example- Net 60",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "sortOrder": {
          "format": "int32",
          "description": "The value specifies the position of a payment term in a list.\r\nType- Numeric, Example- 8",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "8"
        },
        "moveDueDatesTo": {
          "description": "Gets or Sets MoveDueDatesTo",
          "pattern": "0|1|2",
          "type": "string",
          "example": "0"
        },
        "dueDateCalc": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_CALC is the date when an invoice payment is due to the buyer.\r\nType- Numeric, Example- 1",
          "pattern": "0|1",
          "type": "integer",
          "example": "1"
        },
        "dueDateDays": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_DAYS defines the number of days to be added to the base date. \r\nType- Numeric, Example- 60",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "60"
        },
        "dueDateDays2": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_DAYS2 defines the number of days to be added to the due date resulting from DUE_DATE_DAYS. \r\nType- Numeric, Example- 0",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "0"
        },
        "dueDateEom": {
          "format": "int32",
          "description": "Due date calculation defines the date when the payment must be done by the buyer to the supplier. DUE_DATE_EOM (end of month) defines the number of month ending moves:0 = no move ,1 = The due date will be moved to the last day of the base date's month. 2 = The due date will be moved to the following month's last day.\r\nType- Numeric, Example- 0",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "0"
        },
        "cashDueDateCalc": {
          "format": "int32",
          "description": "Cash due date calculation is done for cash date. CASH_DISCOUNT defines a discount percentage. CASH_DUE_DATE_CALC is the date when an invoice payment is due to the buyer.\r\nType- Numeric, Example- 2",
          "pattern": "0|1|2",
          "type": "integer",
          "example": "2"
        },
        "cashDueDateDays": {
          "format": "int32",
          "description": "Cash due date calculation is done for cash date. CASH_DISCOUNT defines a discount percentage. CASH_DUE_DATE_DAYS defines the number of days to be added to the cash date.\r\nType- Numeric, Example- 0",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "0"
        },
        "cashDueDateDays2": {
          "format": "int32",
          "description": "Cash due date calculation is done for cash date. CASH_DISCOUNT defines a discount percentage. CASH_DUE_DATE_DAYS2 defines the number of days to be added to the due date resulting from CASH_DUE_DATE_DAYS.\r\nType- Numeric, Example- 0",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "0"
        },
        "cashDueDateEom": {
          "format": "int32",
          "description": "CASH_DUE_DATE_EOM (end of month) defines the number of month ending moves: 0 = no move, 1 = The due date will be moved to the last day of the cash date's month., 2 = The due date will be moved to the following month's last day.\r\nType- Numeric, Example- 0",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer",
          "example": "0"
        },
        "cashDiscount": {
          "format": "double",
          "description": "Defines the discount percentage\r\nType- Numeric, Example- 0.00000000",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number",
          "example": "0.00000000"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Defines the date when the payment term's validity period starts.\r\nType- DateTime, Example- 2012-01-01",
          "type": "string",
          "example": "2015-01-01"
        },
        "validTo": {
          "format": "date-time",
          "description": "Defines the date when the payment term's validity period ends.\r\nType- DateTime, Example- 2012-01-01",
          "type": "string",
          "example": "2016-01-02"
        },
        "companies": {
          "description": "List of company units to associate paymentterm to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTermCompanyEntity"
          }
        },
        "paymentTermDiscountRules": {
          "description": "Gets or Sets PaymentTermDiscountRules",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTermDiscountRule"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "PaymentTermCompanyEntity": {
      "required": [
        "companyCode",
        "inherit",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "The payment term for different suppliers is attached to this company code.\r\nType- string, Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "inherit": {
          "description": "The value defines whether the payment is inherited to lower organization units in the organization structure.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "PaymentTermDiscountRule": {
      "required": [
        "externalCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "External code is a unique code for the payment term's discount rules.\r\nType- string, Example- ExternalCode4",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "discountDays": {
          "format": "int32",
          "description": "Defines number of days used in dynamic cash discount. The number of days must be unique for each discount percentage.\r\nType- numeric, Example- 5",
          "maximum": 2147483647.0,
          "minimum": 0.0,
          "type": "integer"
        },
        "discountPercent": {
          "format": "double",
          "description": "Defines the discount percentage that the supplier offers for the buyer for early cash payments\r\nType- numeric, Example- 1",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "ProjectResponse": {
      "required": [
        "projects"
      ],
      "type": "object",
      "properties": {
        "projects": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectEntity"
          }
        }
      }
    },
    "ProjectEntity": {
      "required": [
        "projectCode",
        "projectNames",
        "validFrom",
        "validUntil",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "projectCode": {
          "description": "Defines a code for the project that is mapped with the organization. The code is used when creating purchase requisitions, purchase orders, and invoice coding.\r\nType- string , Example- PCode1",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "PCode1"
        },
        "projectNames": {
          "description": "Defines a name for the project that is mapped with the organization. The code is used when creating purchase requisitions, purchase orders, and invoice coding.\r\nType- string , Example- Project1",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "description": {
          "description": "Defines a project description that is shown when a user selects the project\r\nType- string , Example- Test Project1",
          "maxLength": 500,
          "minLength": 0,
          "type": "string",
          "example": "Test Project 1"
        },
        "validFrom": {
          "format": "date-time",
          "description": "Specifies the date when the project validity starts\r\nType- DateTime , Example- 2012-01-01",
          "type": "string",
          "example": "2017-01-01"
        },
        "validUntil": {
          "format": "date-time",
          "description": "Specifies the date when the project validity ends\r\nType- DateTime , Example- 2013-01-01",
          "type": "string",
          "example": "2018-01-01"
        },
        "companies": {
          "description": "List of company units to associate project to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "ProjectCompanyEntity": {
      "required": [
        "companyCode",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines the company code that the project is mapped to. You can map many projects to one company.\r\nType- string , Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "TaxCodeResponse": {
      "type": "object",
      "properties": {
        "taxCodes": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeEntity"
          }
        }
      }
    },
    "TaxCodeEntity": {
      "required": [
        "taxCode",
        "taxCodeNames",
        "taxPercentage",
        "companies",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "taxCode": {
          "description": "Specifies a code for the tax to be mapped with the organization\r\nType- string , Example- B9",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "B9"
        },
        "taxCodeNames": {
          "description": "Specifies a name for the tax to be mapped with the organization\r\nType- string , Example- Taxable/tax-exempt output tax w/o input tax dedctn",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageTranslationEntity"
          }
        },
        "taxPercentage": {
          "format": "double",
          "description": "Specifies the tax percentage. The value must be 0-100.\r\nType- Numeric , Example- 10.000000",
          "maximum": 100.0,
          "minimum": 0.0,
          "type": "number",
          "example": "10.0000000"
        },
        "taxPercentage2": {
          "format": "double",
          "description": "Gets or Sets TaxPercentage2",
          "type": "number",
          "example": "0.0000000"
        },
        "additionalData": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeAdditionalData"
          }
        },
        "companies": {
          "description": "List of company units to associate taxcodes to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaxCodeCompanyEntity"
          }
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "TaxCodeAdditionalData": {
      "type": "object",
      "properties": {
        "externalCode": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "account": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "statistical": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "transactionType": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "taxPercent": {
          "format": "double",
          "type": "number"
        },
        "country": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "condition": {
          "maxLength": 25,
          "minLength": 0,
          "type": "string"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "TaxCodeCompanyEntity": {
      "required": [
        "companyCode",
        "inherit",
        "active"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Defines a company code that the tax code is mapped to \r\nType- string , Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "inherit": {
          "description": "The value specifies whether the property is inherited to lower organizations.\r\nType- Boolean (true/false), Example- true",
          "type": "boolean"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\n\tType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "UserResponse": {
      "type": "object",
      "properties": {
        "users": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserEntity"
          }
        }
      }
    },
    "UserEntity": {
      "required": [
        "firstName",
        "surName",
        "loginAccount",
        "email",
        "groups",
        "companyCode",
        "externalCode"
      ],
      "type": "object",
      "properties": {
        "firstName": {
          "description": "Specifies the user's first name\r\nType- string , Example- Andy",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "Amrinder"
        },
        "surName": {
          "description": "Specifies the user's last name\r\nType- string , Example- Walt",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "Bhagtana"
        },
        "uiLanguage": {
          "description": "Specifies the language in which the user browses the system. The languages, for example English or Finnish, are available in the language picker.\r\nType- string , Example- en-US",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "en-US"
        },
        "countryCode": {
          "description": "Gets or Sets CountryCode. Not used in P2P Alusta.",
          "maxLength": 3,
          "minLength": 2,
          "type": "string"
        },
        "telephone": {
          "description": "Specifies the user's telephone number\r\nType- string , Example- 501234567",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "501234567"
        },
        "loginAccount": {
          "description": "Unique user id. A new user id means a new user, using existing user id will update existing user data. Without Basware Access, this is also user’s login account\r\nType- string , Example- BASWARE\\AMRINDERBH",
          "maxLength": 100,
          "minLength": 1,
          "type": "string",
          "example": "BASWARE\\AMRINDERBH"
        },
        "password": {
          "description": "Gets or Sets users password. Not used in P2P Alusta.",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "middleInitial": {
          "description": "Specifies the user's middle name's initial letter\r\nType- string , Example- S",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "S"
        },
        "email": {
          "description": "Specifies the user’s email address. With Basware Access this is user’s login account.\r\nType- string , Example- abc@basware.com",
          "maxLength": 320,
          "minLength": 3,
          "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
          "type": "string",
          "example": "abc@basware.com"
        },
        "costCenterCode": {
          "description": "Gets or Sets CostCenterCode\r\nType- string , Example- 1000",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "1000"
        },
        "validFrom": {
          "format": "date-time",
          "description": "The user is active and can use the system starting from this date.\r\nType- DateTime , Example- 2012-02-01",
          "type": "string",
          "example": "2017-01-01"
        },
        "validUntil": {
          "format": "date-time",
          "description": "On this date, the user is deactivated and can no longer use the system.\r\nType- DateTime , Example- 2013-02-01",
          "type": "string",
          "example": "2018-01-02"
        },
        "supervisorLoginAccount": {
          "description": "Unique user id of the user’s supervisor.\r\nType- string , Example- BASWARE\\KARTIK",
          "maxLength": 100,
          "minLength": 0,
          "type": "string",
          "example": "BASWARE\\KARTIK"
        },
        "personCode": {
          "description": "Defines the user’s person code that is mapped with the user’s employee ID.\r\nType- string , Example- 1002",
          "maxLength": 25,
          "minLength": 0,
          "type": "string",
          "example": "1002"
        },
        "title": {
          "description": "Specifies the user's title\r\nType- string , Example- Purchase Admin",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Purchase Admin"
        },
        "loginType": {
          "description": "There can be three types of login: \r\nSingle service username and password login (0): Entry level option for cases when only one Basware service is in use. User is created to the Basware service user repository and authentication is with username and password. If more than one Basware service is in use this may cause situation where same user has different passwords for different Basware services and needs to authenticate separately to each service. Passwords are delivered via separate emails.\r\nSingle service SSO login (2): Single Sign On integrated solution for cases when only one Basware service is in use. Also used for Purchase Manager and Invoice Automation point to point authentication integration if other Basware services are not in use. Not applicable with some Basware Services (username and separate password is used in those services instead).\r\nBasware Access login (4): Authentication for cases when all Basware services are in use or when Single Sign On integration is required and not otherwise supported. Supports both username and password authentication and SSO integrations. Requires provisioning Basware Access service into use.",
          "pattern": "0|2|4|99|",
          "type": "string",
          "example": "99"
        },
        "approvalPasswordUseAllowed": {
          "description": "This value defines whether the system generates an approval password for the user to be used when approving purchase requisitions, purchase orders, and invoices.\r\nType- string , Example- 0",
          "type": "string",
          "example": "0"
        },
        "collaborationSendType": {
          "description": "Defines how notifications are sent for discussions and announcements. The options are: No notifications,For each new message,Daily summary\r\nType- string , Example- 1",
          "pattern": "0|1|2|",
          "type": "string",
          "example": "1"
        },
        "messageSendType": {
          "description": "Defines how notifications are sent for tasks. The options are: No notifications, For each new task,Daily summary\r\nType- string , Example- 1",
          "pattern": "0|1|2|",
          "type": "string",
          "example": "1"
        },
        "groups": {
          "description": "Gets or Sets Groups",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroup"
          }
        },
        "spendingLimits": {
          "description": "Spending limits in Purchase Manager. Not used in P2P Alusta.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpendingLimits"
          }
        },
        "purchaseManagerUserLocations": {
          "$ref": "#/definitions/PurchaseManagerUserLocations",
          "description": "User default locations in Purchase Manager. Not used in P2P Alusta."
        },
        "purchaseManagerModuleAccess": {
          "$ref": "#/definitions/PurchaseManagerModuleAccess",
          "description": "Module access in Purchase Manager. Not used in P2P Alusta."
        },
        "purchasingGroups": {
          "description": "Array of Group Names that user should belong to for purchasing functions in the system",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PurchasingGroups"
          }
        },
        "accessRealms": {
          "description": "A list of realms to be granted for the user instead of the default realm.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "accessLoginMethod": {
          "description": "A specific login method for the user instead of the default.",
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "accessTimeout": {
          "format": "int32",
          "description": "User specific timeout in seconds to use instead of the login method default.",
          "maximum": 28800.0,
          "minimum": 900.0,
          "type": "integer"
        },
        "companyCode": {
          "description": "The company code specifies the user's home organization element.\r\nType- string , Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string",
          "example": "BW01"
        },
        "loginAllowed": {
          "description": "This value defines whether the user can access the system after the user details are saved.\r\nType- Boolean (true/false) , Example- false",
          "type": "boolean",
          "example": "0"
        },
        "externalCode": {
          "description": "External identifier that is used as a key in API",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "4847-31231212-212121-1212"
        },
        "lastUpdated": {
          "format": "date-time",
          "description": "The timestamp of last modification",
          "type": "string"
        }
      }
    },
    "UserGroup": {
      "required": [
        "externalGroupCode"
      ],
      "type": "object",
      "properties": {
        "externalGroupCode": {
          "description": "Gets or Sets external group code",
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "active": {
          "description": "This flag will enable the data to be visible on UI, provided if the value is true, not visible in case of value is false. It will be also used for soft delete.\r\nType-Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "SpendingLimits": {
      "required": [
        "category",
        "limit"
      ],
      "type": "object",
      "properties": {
        "category": {
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "limit": {
          "format": "double",
          "type": "number"
        }
      }
    },
    "PurchaseManagerUserLocations": {
      "type": "object",
      "properties": {
        "shipToCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "shipToName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "billToCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "billToName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "chargeToCode": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        },
        "chargeToName": {
          "maxLength": 100,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "PurchaseManagerModuleAccess": {
      "type": "object",
      "properties": {
        "purchasing": {
          "description": "Whether user has access to Purchase Manager module or not.\r\nType- Boolean (true/false) , Example- true",
          "type": "boolean"
        },
        "travel": {
          "description": "Whether user has access to Travel &amp; Expense module or not.\r\nType-Boolean (true/false), Example- false",
          "type": "boolean"
        },
        "spendManager": {
          "description": "Whether user has access to Spend Manager module or not.\r\nType-Boolean (true/false), Example- false",
          "type": "boolean"
        },
        "assets": {
          "description": "Whether user has access to Asset Manager module or not.\r\nType-Boolean (true/false), Example- false",
          "type": "boolean"
        },
        "budgets": {
          "description": "Whether user has access to Budget Manager module or not.\r\nType-Boolean (true/false), Example- false",
          "type": "boolean"
        }
      }
    },
    "PurchasingGroups": {
      "type": "object",
      "properties": {
        "groupName": {
          "description": "Gets or Sets Group Name",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "companyCode": {
          "description": "The company code specifies the purchasing groups organization element.\r\nType- string , Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        }
      }
    },
    "VendorEntity": {
      "required": [
        "externalCode",
        "vendorCode",
        "name",
        "companies"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Specifies a unique code for the vendor\r\nType- String",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "c6437eef-0d71-4cb0-8a6e-7f114831478d"
        },
        "vendorCode": {
          "description": "Specifies a code for the vendor\r\nType- String, Example- BW_Sup1",
          "maxLength": 25,
          "minLength": 1,
          "type": "string",
          "example": "ADFS1254"
        },
        "vendorParent": {
          "description": "VendorCode of parent. Not used in P2P Alusta",
          "type": "string",
          "example": "ADFS1254"
        },
        "buvid": {
          "description": "Vendor identifier generated by Basware. Not to be included when posting data.",
          "maxLength": 36,
          "minLength": 1,
          "type": "string",
          "example": "f0b29a62-a5e0-4285-8ceb-11a92eccf212"
        },
        "name": {
          "description": "Specifies a name for the vendor\r\nType- String, Example- BW_supName1",
          "maxLength": 250,
          "minLength": 1,
          "type": "string",
          "example": "Things and Gadgets Inc."
        },
        "sourceSystem": {
          "description": "Name of the source system, e.g. ERP instance",
          "maxLength": 36,
          "minLength": 0,
          "type": "string",
          "example": "SAPEUR1"
        },
        "description": {
          "description": "Freetext description of vendor",
          "maxLength": 250,
          "minLength": 0,
          "type": "string",
          "example": "Buy all things and gadgets from this vendor."
        },
        "lastUpdated": {
          "format": "date-time",
          "type": "string"
        },
        "supplierAssignedAccountId": {
          "description": "Customer ID in vendor's system.",
          "maxLength": 128,
          "minLength": 0,
          "type": "string"
        },
        "eligibleForSourcing": {
          "description": "Label the vendors that are eligible for sourcing activities.",
          "type": "boolean"
        },
        "identifiers": {
          "description": "Vendor identifiers",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorIdentifierEntity"
          }
        },
        "addresses": {
          "description": "Vendor addresses",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAddressEntity"
          }
        },
        "contacts": {
          "description": "Vendor contacts",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorContactEntity"
          }
        },
        "deliveryTerm": {
          "$ref": "#/definitions/VendorDeliveryTermEntity"
        },
        "paymentMeans": {
          "description": "Vendor payment means",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorPaymentMeanEntity"
          }
        },
        "paymentTerms": {
          "$ref": "#/definitions/VendorPaymentTermEntity"
        },
        "orderingDetails": {
          "$ref": "#/definitions/VendorOrderingDetailsEntity"
        },
        "processingStatus": {
          "$ref": "#/definitions/VendorProcessingStatusEntity"
        },
        "tags": {
          "description": "Tags are used to group the vendors",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorTagEntity"
          }
        },
        "customFields": {
          "description": "Custom fields are used to provide additional data",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAdditionalFieldEntity"
          }
        },
        "companies": {
          "description": "List of company units to associate vendor to P2P organization hierarchy",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorCompanyEntity"
          }
        }
      }
    },
    "VendorIdentifierEntity": {
      "required": [
        "id",
        "schemeId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier id. For example VAT id, local registry id, DUNS, GLN",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "schemeId": {
          "description": "Identifier scheme id.",
          "maxLength": 32,
          "minLength": 1,
          "type": "string"
        },
        "defaultPartyId": {
          "description": "This field contains a unique party identifier.\r\nType- Boolean (true/false) , Example- true",
          "type": "boolean"
        }
      }
    },
    "VendorAddressEntity": {
      "required": [
        "externalCode",
        "name"
      ],
      "type": "object",
      "properties": {
        "externalCode": {
          "description": "Specifies a unique external code for the vendor\r\nType- string, Example- ExternalCode4544",
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "name": {
          "description": "Specifies the address' name for the vendor\r\nType- string, Example- Remittance address",
          "maxLength": 200,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "addressType": {
          "enum": [
            "AdditionalAddress",
            "VisitingAddress",
            "RemittanceAddress",
            "DeliveryAddress",
            "PostalAddress",
            "RegistrationAddress"
          ],
          "type": "string"
        },
        "addressLine1": {
          "description": "Specifies the type of the address for the vendor\r\nType- string, Example- AdditionalAddress",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "addressLine2": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "addressLine3": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "cityName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "postalZone": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "poBox": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "streetName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "locality": {
          "description": "Atribute to postalAddress.This field is required in UK if a similar road name exists within a post town area",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "countrySubEntity": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "countrySubEntityDescription": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "countryId": {
          "description": "Defines the country ID for the vendor",
          "maxLength": 2,
          "minLength": 2,
          "type": "string"
        },
        "default": {
          "description": "Defines which of the following addresses is the default address for the vendor: Postal address, Physical address ,Delivery address",
          "type": "boolean"
        },
        "additionalAddressFields": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorAddressPartEntity"
          }
        }
      }
    },
    "VendorContactEntity": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the contact. Used as a key in list of contacts.",
          "maxLength": 200,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "telephone": {
          "description": "Specifies the vendor's telephone number\r\nType- string, Example- 555-3342-454",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "telefax": {
          "description": "Specifies the vendor's fax number\r\nType- string, Example- 555-3342-455",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "email": {
          "description": "Specifies the vendor's email address\r\nType- string, Example- anc@vendor.org",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "website": {
          "description": "Specifies the vendor's web site address\r\nType- string, Example- www.vendor.org",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "role": {
          "enum": [
            "AdditionalContact",
            "PrimaryContact",
            "SecondaryContact"
          ],
          "type": "string"
        }
      }
    },
    "VendorDeliveryTermEntity": {
      "required": [
        "deliveryTermCode"
      ],
      "type": "object",
      "properties": {
        "deliveryTermCode": {
          "description": "Specifies the vendor's delivery term code\r\nType- string, Example- DDP",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "description": "Default delivery term description",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorPaymentMeanEntity": {
      "required": [
        "paymentMeansCode"
      ],
      "type": "object",
      "properties": {
        "paymentMeansCode": {
          "description": "Specifies the vendor's payment term code\r\nType- string, Example- NET90",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "description": "Specifies the vendor's payment term description\r\nType- string, Example- Payment 90 days after invoice date",
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "currencyCode": {
          "description": "Specifies the vendor's currency code\r\nType- string, Example- EUR",
          "maxLength": 25,
          "minLength": 3,
          "type": "string"
        },
        "financialAccounts": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/VendorfinancialAccountsEntity"
          }
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "VendorPaymentTermEntity": {
      "required": [
        "paymentTermCode"
      ],
      "type": "object",
      "properties": {
        "paymentTermCode": {
          "description": "Specifies the vendor's payment term code\r\nType- string, Example- NET90",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorOrderingDetailsEntity": {
      "type": "object",
      "properties": {
        "orderingFormat": {
          "description": "Specifies the order format that the supplier uses with purchase orders\r\nType- string, Example- UBL",
          "enum": [
            "UBL",
            "EHFXML21",
            "email",
            "other"
          ],
          "type": "string"
        },
        "orderingLanguage": {
          "description": "Specifies the supplier's language\r\nType- string, Example- en-US",
          "maxLength": 8,
          "minLength": 0,
          "type": "string"
        },
        "orderEmail": {
          "description": "Specifies the supplier's email address where the purchase order is sent to\r\nType- string, Example- vendor@vendor.org",
          "maxLength": 320,
          "minLength": 3,
          "pattern": "^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$",
          "type": "string"
        },
        "orderProcessType": {
          "description": "Name of order process. Not used in P2P Alusta.",
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "minimumOrderAllowed": {
          "format": "double",
          "description": "Value of the minimum order allowed. Not used in P2P Alusta.",
          "type": "number"
        },
        "isTaxable": {
          "description": "Are purchases from this vendor taxable. Not used in P2P Alusta.",
          "type": "boolean"
        },
        "automaticallyReceiveOnInvoice": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "automaticallyReceiveOnOrder": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "hasActiveCatalog": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "createOrderAutomatically": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "deliverOrderAutomatically": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "noFreeformItems": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        },
        "sendToNetwork": {
          "description": "Not used in P2P Alusta.",
          "type": "boolean"
        }
      }
    },
    "VendorProcessingStatusEntity": {
      "type": "object",
      "properties": {
        "active": {
          "description": "Indicates whether vendor should be used for purchases",
          "type": "boolean"
        },
        "paymentDenied": {
          "description": "Specifies if there is no payment term for the vendor\r\nType- Boolean (true/false), Example- false",
          "type": "boolean"
        }
      }
    },
    "VendorTagEntity": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the tag. Used as key in this array.",
          "maxLength": 50,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "tagGroup": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorAdditionalFieldEntity": {
      "required": [
        "name",
        "value"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the additional field entry. Used as key in this array.",
          "maxLength": 25,
          "minLength": 1,
          "type": "string"
        },
        "value": {
          "maxLength": 250,
          "minLength": 1,
          "type": "string"
        },
        "groupName": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorCompanyEntity": {
      "required": [
        "companyCode"
      ],
      "type": "object",
      "properties": {
        "companyCode": {
          "description": "Specifies the organization that the vendor is mapped to\r\nType- String, Example- BW00",
          "maxLength": 32,
          "minLength": 2,
          "type": "string"
        },
        "inheritToChildUnits": {
          "description": "The value specifies whether the vendor is inherited to lower organizations.\r\nType- Boolean (true/false), Example- true",
          "type": "boolean"
        }
      }
    },
    "VendorAddressPartEntity": {
      "type": "object",
      "properties": {
        "key": {
          "enum": [
            "AdditionalField1",
            "AdditionalField2",
            "AdditionalStreetName",
            "BlockName",
            "BuildingName",
            "BuildingNumber",
            "CitySubDivisionName",
            "Country",
            "Department",
            "District",
            "Email",
            "Floor",
            "GlobalLocationNumber",
            "InhouseEmail",
            "MarkAttention",
            "MarkCare",
            "Region",
            "Room",
            "CoordinateSystemCode",
            "PlotIdentification",
            "LatitudeDegreesMeasure",
            "LatitudeDirectionCode",
            "LatitudeMinutesMeasure",
            "LongitudeDegreesMeasure",
            "LongitudeDirectionCode",
            "LongitudeMinutesMeasure"
          ],
          "type": "string"
        },
        "value": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        }
      }
    },
    "VendorfinancialAccountsEntity": {
      "type": "object",
      "properties": {
        "financialInstitution": {
          "$ref": "#/definitions/FinancialInstitutionEntity"
        },
        "financialAccountIdentifiers": {
          "uniqueItems": false,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FinancialAccountIdentifierEntity"
          }
        }
      }
    },
    "FinancialInstitutionEntity": {
      "required": [
        "name",
        "id",
        "schemeId"
      ],
      "type": "object",
      "properties": {
        "name": {
          "description": "Specifies the vendor's bank name\r\nType- string, Example- BWAcc_1_1\r\nSpecifies the vendor's bank ID\r\nType- string, Example- NDEAGB2L",
          "maxLength": 250,
          "minLength": 0,
          "type": "string"
        },
        "id": {
          "maxLength": 20,
          "minLength": 1,
          "type": "string"
        },
        "schemeId": {
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "branchId": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "branchIdSchemeId": {
          "maxLength": 36,
          "minLength": 0,
          "type": "string"
        },
        "countryId": {
          "description": "Defines the country ID for the vendor",
          "maxLength": 2,
          "minLength": 2,
          "type": "string"
        }
      }
    },
    "FinancialAccountIdentifierEntity": {
      "required": [
        "schemeId"
      ],
      "type": "object",
      "properties": {
        "schemeId": {
          "maxLength": 36,
          "minLength": 1,
          "type": "string"
        },
        "description": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "id": {
          "maxLength": 50,
          "minLength": 0,
          "type": "string"
        },
        "accountHolderName": {
          "maxLength": 200,
          "minLength": 0,
          "type": "string"
        },
        "currencyCode": {
          "maxLength": 3,
          "minLength": 3,
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "name": "Authorization",
      "in": "header",
      "type": "basic",
      "description": "Please insert basic authentication credentials into fields"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ]
}